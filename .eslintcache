[{"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\index.tsx":"1","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\App.tsx":"2","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\styles\\global.ts":"3","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\routes\\index.tsx":"4","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\People\\index.tsx":"5","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\SignIn\\index.tsx":"6","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\People\\FormUsers\\index.tsx":"7","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\AnimalType\\index.tsx":"8","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\AnimalBreed\\index.tsx":"9","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\AnimalBreed\\FormAnimalBreed\\index.tsx":"10","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\AnimalType\\FormAnimalType\\index.tsx":"11","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Modalities\\FormModalities\\index.tsx":"12","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Benefits\\index.tsx":"13","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\BillsCategory\\index.tsx":"14","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Modalities\\index.tsx":"15","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\HealthPlans\\index.tsx":"16","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Benefits\\FormBenefits\\index.tsx":"17","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\BillsCategory\\FormBillsCategory\\index.tsx":"18","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\HealthPlans\\FormHealthPlans\\index.tsx":"19","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\PetProcedures\\FormPetProcedures\\index.tsx":"20","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Financial\\index.tsx":"21","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\perfilCustomer\\index.tsx":"22","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Accreditations\\index.tsx":"23","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Accreditations\\FormAccreditations\\index.tsx":"24","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\perfil\\index.tsx":"25","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\Logup\\index.tsx":"26","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\Login\\index.tsx":"27","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\FirstAccess\\index.tsx":"28","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\MyPets\\index.tsx":"29","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\Payment\\index.tsx":"30","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\FormsPages\\FormBill\\index.tsx":"31","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\PetProcedures\\index.tsx":"32","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\People\\styles.ts":"33","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\SignIn\\styles.ts":"34","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\People\\FormUsers\\styles.ts":"35","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\PetProcedures\\styles.ts":"36","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\FormsPages\\FormBill\\styles.ts":"37","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\Payment\\styles.ts":"38","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\PeopleApi.ts":"39","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\FinancialPayItem.ts":"40","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\PetProceduresApi.ts":"41","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\BillsPay.ts":"42","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\MenuMobile\\Navbar.tsx":"43","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\MyPets\\styles.ts":"44","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\HealthPlansApi.ts":"45","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\FirstAccess\\styles.ts":"46","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\Login\\styles.ts":"47","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\http-common.ts":"48","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\Button\\index.tsx":"49","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\InputLabelPure\\index.tsx":"50","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\Loading\\index.tsx":"51","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\MenuPrincipalLeft\\index.tsx":"52","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\Select\\index.tsx":"53","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\ButtonUtil\\index.tsx":"54","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\InputMoney\\index.tsx":"55","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\InputDate\\index.tsx":"56","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\InputText\\index.tsx":"57","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\MenuMobile\\styles.ts":"58","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\Logup\\styles.ts":"59","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\perfil\\styles.ts":"60","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\OwnerPetsApi.ts":"61","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\AccreditationsApi.ts":"62","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Accreditations\\FormAccreditations\\styles.ts":"63","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\perfilCustomer\\styles.ts":"64","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\PlansBenfitsApi.ts":"65","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Accreditations\\styles.ts":"66","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Financial\\styles.ts":"67","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\ModalitiesApi.ts":"68","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\PetProcedures\\FormPetProcedures\\styles.ts":"69","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\MenuMobile\\SubMenu.tsx":"70","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\MenuPrincipalLeft\\MenuData.tsx":"71","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\BillsCategoryApi.ts":"72","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\BillsCategory\\FormBillsCategory\\styles.ts":"73","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\HealthPlans\\FormHealthPlans\\styles.ts":"74","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\BenefitsApi.ts":"75","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Benefits\\FormBenefits\\styles.ts":"76","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Modalities\\styles.ts":"77","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\HealthPlans\\styles.ts":"78","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Benefits\\styles.ts":"79","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\BillsCategory\\styles.ts":"80","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Modalities\\FormModalities\\styles.ts":"81","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\AnimalTypeApi.ts":"82","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\AnimalBreedApi.ts":"83","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\AnimalBreed\\FormAnimalBreed\\styles.ts":"84","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\AnimalType\\styles.ts":"85","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\AnimalBreed\\styles.ts":"86","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\AnimalType\\FormAnimalType\\styles.ts":"87","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\InputText\\styles.ts":"88","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\InputLabelPure\\styles.ts":"89","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\InputDate\\styles.ts":"90","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\ButtonUtil\\styles.ts":"91","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\InputMoney\\styles.ts":"92","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\Select\\styles.ts":"93","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\MenuPrincipalLeft\\styles.ts":"94","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\Button\\styles.ts":"95","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\Loading\\styles.ts":"96","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\People\\PDF\\Viewer.tsx":"97","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\RelatoriesFinancial\\PdfDocument\\PDFViewer.tsx":"98","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\RelatoriesFinancial\\index.tsx":"99","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\People\\PDF\\Document.tsx":"100","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\RelatoriesFinancial\\styles.ts":"101","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\utils\\formatCurrency.ts":"102","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\RelatoriesFinancial\\PdfDocument\\index.tsx":"103"},{"size":518,"mtime":1618491434459,"results":"104","hashOfConfig":"105"},{"size":289,"mtime":1618491434419,"results":"106","hashOfConfig":"105"},{"size":965,"mtime":1618491434491,"results":"107","hashOfConfig":"105"},{"size":4198,"mtime":1618493769430,"results":"108","hashOfConfig":"105"},{"size":8399,"mtime":1618493769427,"results":"109","hashOfConfig":"105"},{"size":2768,"mtime":1618491434477,"results":"110","hashOfConfig":"105"},{"size":7554,"mtime":1618491434475,"results":"111","hashOfConfig":"105"},{"size":8146,"mtime":1618491434466,"results":"112","hashOfConfig":"105"},{"size":5697,"mtime":1618491434464,"results":"113","hashOfConfig":"105"},{"size":5140,"mtime":1618491434464,"results":"114","hashOfConfig":"105"},{"size":3508,"mtime":1618491434466,"results":"115","hashOfConfig":"105"},{"size":4002,"mtime":1618491434473,"results":"116","hashOfConfig":"105"},{"size":5616,"mtime":1618491434468,"results":"117","hashOfConfig":"105"},{"size":5999,"mtime":1618491434469,"results":"118","hashOfConfig":"105"},{"size":5732,"mtime":1618491434474,"results":"119","hashOfConfig":"105"},{"size":5694,"mtime":1618491434473,"results":"120","hashOfConfig":"105"},{"size":3746,"mtime":1618491434467,"results":"121","hashOfConfig":"105"},{"size":3815,"mtime":1618491434469,"results":"122","hashOfConfig":"105"},{"size":3902,"mtime":1618491434472,"results":"123","hashOfConfig":"105"},{"size":5056,"mtime":1618491434476,"results":"124","hashOfConfig":"105"},{"size":9318,"mtime":1618491434471,"results":"125","hashOfConfig":"105"},{"size":8704,"mtime":1618491434484,"results":"126","hashOfConfig":"105"},{"size":7397,"mtime":1618491434463,"results":"127","hashOfConfig":"105"},{"size":14138,"mtime":1618491434462,"results":"128","hashOfConfig":"105"},{"size":2587,"mtime":1618491434483,"results":"129","hashOfConfig":"105"},{"size":8505,"mtime":1618491434481,"results":"130","hashOfConfig":"105"},{"size":7219,"mtime":1618491434480,"results":"131","hashOfConfig":"105"},{"size":7318,"mtime":1618491434479,"results":"132","hashOfConfig":"105"},{"size":7875,"mtime":1618491434481,"results":"133","hashOfConfig":"105"},{"size":1851,"mtime":1618491434482,"results":"134","hashOfConfig":"105"},{"size":9694,"mtime":1618491434460,"results":"135","hashOfConfig":"105"},{"size":5789,"mtime":1618491434477,"results":"136","hashOfConfig":"105"},{"size":1936,"mtime":1618491434476,"results":"137","hashOfConfig":"105"},{"size":1989,"mtime":1618491434478,"results":"138","hashOfConfig":"105"},{"size":2326,"mtime":1618491434475,"results":"139","hashOfConfig":"105"},{"size":1936,"mtime":1618491434477,"results":"140","hashOfConfig":"105"},{"size":2281,"mtime":1618491434460,"results":"141","hashOfConfig":"105"},{"size":3445,"mtime":1618491434482,"results":"142","hashOfConfig":"105"},{"size":1425,"mtime":1618491434489,"results":"143","hashOfConfig":"105"},{"size":1861,"mtime":1618491434488,"results":"144","hashOfConfig":"105"},{"size":695,"mtime":1618491434489,"results":"145","hashOfConfig":"105"},{"size":1495,"mtime":1618491434488,"results":"146","hashOfConfig":"105"},{"size":1203,"mtime":1618491434455,"results":"147","hashOfConfig":"105"},{"size":4875,"mtime":1618491434482,"results":"148","hashOfConfig":"105"},{"size":746,"mtime":1618491434488,"results":"149","hashOfConfig":"105"},{"size":3711,"mtime":1618491434479,"results":"150","hashOfConfig":"105"},{"size":3704,"mtime":1618491434480,"results":"151","hashOfConfig":"105"},{"size":139,"mtime":1618491434458,"results":"152","hashOfConfig":"105"},{"size":275,"mtime":1618491434448,"results":"153","hashOfConfig":"105"},{"size":2072,"mtime":1618491434452,"results":"154","hashOfConfig":"105"},{"size":16700,"mtime":1618491434454,"results":"155","hashOfConfig":"105"},{"size":1619,"mtime":1618491434456,"results":"156","hashOfConfig":"105"},{"size":2708,"mtime":1618491434457,"results":"157","hashOfConfig":"105"},{"size":293,"mtime":1618491434449,"results":"158","hashOfConfig":"105"},{"size":2570,"mtime":1618491434452,"results":"159","hashOfConfig":"105"},{"size":3736,"mtime":1618491434450,"results":"160","hashOfConfig":"105"},{"size":2068,"mtime":1618491434453,"results":"161","hashOfConfig":"105"},{"size":2392,"mtime":1618491434455,"results":"162","hashOfConfig":"105"},{"size":3470,"mtime":1618491434481,"results":"163","hashOfConfig":"105"},{"size":2275,"mtime":1618491434483,"results":"164","hashOfConfig":"105"},{"size":730,"mtime":1618491434489,"results":"165","hashOfConfig":"105"},{"size":1210,"mtime":1618491434486,"results":"166","hashOfConfig":"105"},{"size":2981,"mtime":1618491434463,"results":"167","hashOfConfig":"105"},{"size":5236,"mtime":1618491434484,"results":"168","hashOfConfig":"105"},{"size":591,"mtime":1618491434489,"results":"169","hashOfConfig":"105"},{"size":1936,"mtime":1618491434463,"results":"170","hashOfConfig":"105"},{"size":2282,"mtime":1618491434471,"results":"171","hashOfConfig":"105"},{"size":575,"mtime":1618491434488,"results":"172","hashOfConfig":"105"},{"size":2282,"mtime":1618491434476,"results":"173","hashOfConfig":"105"},{"size":2383,"mtime":1618491434455,"results":"174","hashOfConfig":"105"},{"size":3001,"mtime":1618491434456,"results":"175","hashOfConfig":"105"},{"size":575,"mtime":1618491434487,"results":"176","hashOfConfig":"105"},{"size":2282,"mtime":1618491434469,"results":"177","hashOfConfig":"105"},{"size":2282,"mtime":1618491434472,"results":"178","hashOfConfig":"105"},{"size":554,"mtime":1618491434487,"results":"179","hashOfConfig":"105"},{"size":2282,"mtime":1618491434468,"results":"180","hashOfConfig":"105"},{"size":1936,"mtime":1618491434474,"results":"181","hashOfConfig":"105"},{"size":1936,"mtime":1618491434473,"results":"182","hashOfConfig":"105"},{"size":1936,"mtime":1618491434468,"results":"183","hashOfConfig":"105"},{"size":1936,"mtime":1618491434470,"results":"184","hashOfConfig":"105"},{"size":2282,"mtime":1618491434474,"results":"185","hashOfConfig":"105"},{"size":538,"mtime":1618491434487,"results":"186","hashOfConfig":"105"},{"size":632,"mtime":1618491434486,"results":"187","hashOfConfig":"105"},{"size":2281,"mtime":1618491434464,"results":"188","hashOfConfig":"105"},{"size":1936,"mtime":1618491434467,"results":"189","hashOfConfig":"105"},{"size":1936,"mtime":1618491434465,"results":"190","hashOfConfig":"105"},{"size":2282,"mtime":1618491434466,"results":"191","hashOfConfig":"105"},{"size":3865,"mtime":1618491434454,"results":"192","hashOfConfig":"105"},{"size":5276,"mtime":1618491434452,"results":"193","hashOfConfig":"105"},{"size":2295,"mtime":1618491434450,"results":"194","hashOfConfig":"105"},{"size":1061,"mtime":1618491434449,"results":"195","hashOfConfig":"105"},{"size":3947,"mtime":1618491434453,"results":"196","hashOfConfig":"105"},{"size":1898,"mtime":1618491434457,"results":"197","hashOfConfig":"105"},{"size":4615,"mtime":1618491434456,"results":"198","hashOfConfig":"105"},{"size":853,"mtime":1618491434448,"results":"199","hashOfConfig":"105"},{"size":2395,"mtime":1618491434454,"results":"200","hashOfConfig":"105"},{"size":309,"mtime":1618493769426,"results":"201","hashOfConfig":"105"},{"size":300,"mtime":1618493769428,"results":"202","hashOfConfig":"105"},{"size":7610,"mtime":1618496160820,"results":"203","hashOfConfig":"105"},{"size":4596,"mtime":1618493769426,"results":"204","hashOfConfig":"105"},{"size":1818,"mtime":1618493769429,"results":"205","hashOfConfig":"105"},{"size":167,"mtime":1618493769431,"results":"206","hashOfConfig":"105"},{"size":5226,"mtime":1618509394606,"results":"207","hashOfConfig":"105"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},"1iicfdg",{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"210"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"210"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"210"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"210"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"210"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"210"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"210"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"210"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"210"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"210"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"210"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"210"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"210"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\index.tsx",[],["428","429","430","431","432"],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\App.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\styles\\global.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\routes\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\People\\index.tsx",["433"],"/* eslint-disable jsx-a11y/control-has-associated-label */\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport {\r\n  withStyles,\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Grid, Hidden, IconButton } from '@material-ui/core';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { FiArrowLeft, FiEdit, FiSearch, FiTrash2 } from 'react-icons/fi';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Button from '../../../components/Button';\r\nimport MenuPrincipalLeft from '../../../components/MenuPrincipalLeft';\r\nimport { Container, GridHeaderSearch, Content } from './styles';\r\nimport peopleApi, { PropsPeople } from '../../../services/PeopleApi';\r\n\r\nimport Input from '../../../components/InputLabelPure';\r\nimport Navbar from '../../../components/MenuMobile/Navbar';\r\nimport ButtonUtil from '../../../components/ButtonUtil';\r\nimport Loading from '../../../components/Loading';\r\n\r\nconst People: React.FC = () => {\r\n  // Inicializa o hook form e todas propriedades ficam dentro de methods\r\n  const methods = useForm({\r\n    shouldUnregister: false,\r\n  });\r\n  const history = useHistory(); // Inicializa o History do react-router-dom\r\n  const [isLoading, setIsLoading] = useState(false); // Variavel de estado para o Loading da pagina\r\n\r\n  const [isListUsers, setListUsers] = useState<PropsPeople[]>([]);\r\n\r\n  const StyledTableCell = withStyles(() =>\r\n    createStyles({\r\n      head: {\r\n        // backgroundColor: '#bfbfbf',\r\n        color: '#000',\r\n        fontWeight: 600,\r\n      },\r\n      body: {\r\n        fontSize: 14,\r\n      },\r\n    }),\r\n  )(TableCell);\r\n\r\n  const StyledTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n      root: {\r\n        '&:nth-of-type(odd)': {\r\n          backgroundColor: theme.palette.action.hover,\r\n        },\r\n      },\r\n    }),\r\n  )(TableRow);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      height: '100%',\r\n    },\r\n    paper: {\r\n      marginTop: 20,\r\n      '&.MuiPaper-elevation5': {\r\n        boxShadow:\r\n          '-5px -5px 5px 4px rgba(0,0,0,0.05), 3px 5px 8px 0px rgba(0,0,0,0.14), 0px 1px 14px 0px rgba(0,0,0,0.12)',\r\n      },\r\n    },\r\n  });\r\n\r\n  const listPeoples = useCallback(async () => {\r\n    setIsLoading(true);\r\n    let current = true;\r\n    await peopleApi\r\n      .getAll()\r\n      .then(result => {\r\n        console.log(result);\r\n        setListUsers(result.data.response);\r\n        setTimeout(() => {\r\n          setIsLoading(false);\r\n        }, 100);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        setTimeout(() => {\r\n          setIsLoading(false);\r\n        }, 700);\r\n      });\r\n    return () => {\r\n      current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    listPeoples();\r\n  }, [listPeoples]);\r\n\r\n  const handleRedirectFormEdit = (user: PropsPeople) => {\r\n    console.log(user);\r\n    return history.push({\r\n      pathname: `edit_user`,\r\n      state: {\r\n        user,\r\n      },\r\n    });\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <Loading isLoading={isLoading} background=\"#fff\" />\r\n      <Container item sm={12} style={{ width: '100%', display: 'flex' }}>\r\n        <MenuPrincipalLeft pages={['all']} />\r\n        <Navbar name=\"Listando Usuários\" />\r\n        <Content>\r\n          <Hidden only={['xs', 'sm']}>\r\n            <Grid container justify=\"center\">\r\n              <p style={{ fontWeight: 500, color: '#9d9d9c' }}>\r\n                Listando Usuários\r\n              </p>\r\n            </Grid>\r\n          </Hidden>\r\n          <GridHeaderSearch container>\r\n            <Hidden only={['xs', 'sm']}>\r\n              <Link to=\"/\">\r\n                <FiArrowLeft />\r\n                Voltar\r\n              </Link>\r\n            </Hidden>\r\n\r\n            <Grid\r\n              item\r\n              style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                position: 'relative',\r\n              }}\r\n            >\r\n              <Input\r\n                style={{ flex: 1, color: '#fff' }}\r\n                name=\"search_user\"\r\n                placeholder=\"Digite aqui...\"\r\n                colorPlaceholder=\"#03818f\"\r\n                backgroundColor=\"#17a0ae\"\r\n              />\r\n              <IconButton className=\"button-search\" onClick={listPeoples}>\r\n                <FiSearch color=\"#17a0ae\" />\r\n              </IconButton>\r\n            </Grid>\r\n            <Link to=\"/register_user\" className=\"add-user\">\r\n              <Button background=\"primary\" style={{ width: 180 }}>\r\n                Adicionar Cliente\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/pdf_user\" target=\"_blank\">\r\n              <Button background=\"secondary\">Imprimir</Button>\r\n            </Link>\r\n          </GridHeaderSearch>\r\n          <Paper\r\n            elevation={2}\r\n            style={{ width: '100%' }}\r\n            className={classes.paper}\r\n          >\r\n            <TableContainer style={{ flex: 1 }}>\r\n              <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                  <TableRow hover>\r\n                    <StyledTableCell width=\"40%\">Nome</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">CPF</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Plano</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Contato</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Situação</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Ações</StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {isListUsers &&\r\n                    isListUsers.map(row => {\r\n                      return (\r\n                        <StyledTableRow key={row.people_id}>\r\n                          <StyledTableCell component=\"th\" scope=\"row\">\r\n                            {row.name}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            128.235.756-50\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            Master Premium\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            (34) 99120-1229\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            Ativado\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            <div\r\n                              style={{\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                              }}\r\n                            >\r\n                              <ButtonUtil\r\n                                icon={FiSearch}\r\n                                background=\"primary\"\r\n                              />\r\n\r\n                              <ButtonUtil\r\n                                icon={FiEdit}\r\n                                background=\"primary\"\r\n                                onClick={() => {\r\n                                  handleRedirectFormEdit(row);\r\n                                }}\r\n                              />\r\n                              <ButtonUtil\r\n                                icon={FiTrash2}\r\n                                background=\"primary\"\r\n                              />\r\n                            </div>\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Content>\r\n      </Container>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\SignIn\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\People\\FormUsers\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\AnimalType\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\AnimalBreed\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\AnimalBreed\\FormAnimalBreed\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\AnimalType\\FormAnimalType\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Modalities\\FormModalities\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Benefits\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\BillsCategory\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Modalities\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\HealthPlans\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Benefits\\FormBenefits\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\BillsCategory\\FormBillsCategory\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\HealthPlans\\FormHealthPlans\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\PetProcedures\\FormPetProcedures\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Financial\\index.tsx",["434"],"import {\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@material-ui/core';\r\nimport {\r\n  withStyles,\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\n\r\nimport { FiArrowLeft, FiEdit, FiSearch, FiTrash2 } from 'react-icons/fi';\r\n\r\nimport Button from '../../../components/Button';\r\nimport MenuPrincipalLeft from '../../../components/MenuPrincipalLeft';\r\n\r\nimport { Container, Content, GridHeaderSearch, Form } from './styles';\r\nimport FinancialPay, {\r\n  PropsFinancialPayItem,\r\n} from '../../../services/FinancialPayItem';\r\nimport Navbar from '../../../components/MenuMobile/Navbar';\r\nimport Loading from '../../../components/Loading';\r\nimport InputDate from '../../../components/InputDate';\r\nimport ButtonUtil from '../../../components/ButtonUtil';\r\nimport PeopleApi from '../../../services/PeopleApi';\r\n\r\ninterface RouteParams {\r\n  id: string;\r\n}\r\n\r\nconst StyledTableCell = withStyles(() =>\r\n  createStyles({\r\n    head: {\r\n      // backgroundColor: '#bfbfbf',\r\n      color: '#000',\r\n      fontWeight: 600,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: import('@material-ui/core').Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }),\r\n)(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    height: '100%',\r\n  },\r\n  paper: {\r\n    marginTop: 20,\r\n    '&.MuiPaper-elevation5': {\r\n      boxShadow:\r\n        '-5px -5px 5px 4px rgba(0,0,0,0.05), 3px 5px 8px 0px rgba(0,0,0,0.14), 0px 1px 14px 0px rgba(0,0,0,0.12)',\r\n    },\r\n  },\r\n});\r\nconst FormUsers: React.FC = () => {\r\n  const [isListFinancial, setIsListFinancial] = useState<\r\n    PropsFinancialPayItem[]\r\n  >([]);\r\n  const { id } = useParams<RouteParams>();\r\n\r\n  const methods = useForm({\r\n    shouldUnregister: false,\r\n    defaultValues: { gender: '', kind_people: '' },\r\n  });\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const onSubmit = data => {\r\n    console.log(data);\r\n\r\n    Object.keys(data).forEach(key => {\r\n      if (typeof data[key] === 'object' && data[key] !== null) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        data[key] = data[key].value;\r\n      }\r\n    });\r\n\r\n    if (!id) {\r\n      PeopleApi.create(data)\r\n        .then(response => {\r\n          console.log(response);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      PeopleApi.put(data)\r\n        .then(response => {\r\n          console.log(response);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  const { getValues } = methods;\r\n  const listAnimalBreed = useCallback(() => {\r\n    const array: PropsFinancialPayItem[] = [];\r\n    setIsLoading(true);\r\n    let current = true;\r\n    FinancialPay.getBetween(getValues('dt_inicio'), getValues('dt_end'))\r\n      .then(result => {\r\n        if (current)\r\n          result.data.response.forEach(item => {\r\n            array.push(item);\r\n          });\r\n        setIsListFinancial(array);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    return () => {\r\n      current = false;\r\n    };\r\n  }, [getValues]);\r\n\r\n  useEffect(() => {\r\n    if (!id) return;\r\n    listAnimalBreed();\r\n  }, [id, listAnimalBreed]);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <Loading isLoading={isLoading} />\r\n      <Container container>\r\n        <MenuPrincipalLeft pages={['all']} />\r\n        <Content>\r\n          <GridHeaderSearch\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Link to=\"/\">\r\n              <FiArrowLeft />\r\n              Voltar\r\n            </Link>\r\n\r\n            <Navbar name=\"Contas a Pagar\" />\r\n\r\n            <Grid\r\n              className=\"title-header\"\r\n              container\r\n              item\r\n              sm={12}\r\n              alignItems=\"center\"\r\n              justify=\"center\"\r\n              direction=\"column\"\r\n            >\r\n              <p style={{ fontWeight: 500, color: '#9d9d9c' }}>\r\n                Contas a Pagar\r\n              </p>\r\n              <hr\r\n                style={{\r\n                  border: 0,\r\n                  borderBottom: '2px solid #17a0ae',\r\n                  width: 130,\r\n                  marginTop: 5,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </GridHeaderSearch>\r\n\r\n          <Form\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={methods.handleSubmit(onSubmit)}\r\n          >\r\n            <Grid container>\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <InputDate\r\n                  name=\"dt_inicio\"\r\n                  label=\"Data Início\"\r\n                  dateInitial=\"2021-02-18\"\r\n                  classNameDateButton=\"dateInit\"\r\n                  onChangeCustom={listAnimalBreed}\r\n                  // onChangeCustom={myFunction}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <InputDate\r\n                  name=\"dt_end\"\r\n                  label=\"Data Final\"\r\n                  dateInitial=\"2021-02-18\"\r\n                  classNameDateButton=\"dateEnd\"\r\n                  // onChangeCustom={myFunction}\r\n                />\r\n              </Grid>\r\n              {/* <Grid item xs={12} sm={12} md={12}>\r\n                <Input\r\n                  name=\"breed_name\"\r\n                  placeholder=\"Nome da Raça\"\r\n                  icon={AiOutlineUser}\r\n                  register={register}\r\n                  getValues={getValues}\r\n                />\r\n              </Grid> */}\r\n            </Grid>\r\n            <Button\r\n              type=\"button\"\r\n              background=\"primary\"\r\n              style={{ marginLeft: 5, marginTop: 15, width: '40%' }}\r\n              onClick={listAnimalBreed}\r\n            >\r\n              Buscar\r\n            </Button>\r\n          </Form>\r\n          <Paper\r\n            elevation={2}\r\n            style={{ width: '100%' }}\r\n            className={classes.paper}\r\n          >\r\n            <TableContainer style={{ flex: 1 }}>\r\n              <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                  <TableRow hover>\r\n                    <StyledTableCell width=\"10%\">Id</StyledTableCell>\r\n                    <StyledTableCell width=\"50%\">Descricao</StyledTableCell>\r\n                    <StyledTableCell width=\"15%\">Vencimento</StyledTableCell>\r\n                    <StyledTableCell width=\"10%\">Valor</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Ações</StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {isListFinancial &&\r\n                    isListFinancial.map(row => {\r\n                      // console.log(row.pay_id);\r\n                      return (\r\n                        <StyledTableRow key={row.pay_item_id}>\r\n                          <StyledTableCell component=\"th\" scope=\"row\">\r\n                            {row.pay_item_id}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell component=\"th\" scope=\"row\">\r\n                            {row.pay_id.description}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell component=\"th\" scope=\"row\">\r\n                            {row.expected_date}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell component=\"th\" scope=\"row\">\r\n                            {parseFloat(row.expected_amount).toLocaleString(\r\n                              'pt-br',\r\n                              {\r\n                                style: 'currency',\r\n                                currency: 'BRL',\r\n                              },\r\n                            )}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            align=\"center\"\r\n                            style={{\r\n                              display: 'flex',\r\n                              alignItems: 'center',\r\n                              justifyContent: 'center',\r\n                            }}\r\n                          >\r\n                            <ButtonUtil icon={FiSearch} background=\"primary\" />\r\n                            <Link to={`/edit_user/${row.pay_item_id}`}>\r\n                              <ButtonUtil icon={FiEdit} background=\"primary\" />\r\n                            </Link>\r\n                            <ButtonUtil icon={FiTrash2} background=\"primary\" />\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Content>\r\n      </Container>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default FormUsers;\r\n","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\perfilCustomer\\index.tsx",["435"],"import React, { ChangeEvent, useCallback, useEffect, useState } from 'react';\r\nimport { FiChevronRight, FiCamera } from 'react-icons/fi';\r\nimport id from 'date-fns/esm/locale/id/index.js';\r\nimport {\r\n  Container,\r\n  ContainerTopProfile,\r\n  ImageProfile,\r\n  DataProfile,\r\n  ContainerDetail,\r\n  ContainerBody,\r\n  EventsDetais,\r\n  Avatar,\r\n  ContainerVourchers,\r\n  PetsDetails,\r\n  Form,\r\n  ContainerPets,\r\n} from './styles';\r\nimport PeopleApi from '../../../services/PeopleApi';\r\nimport PlansBenfitsApi from '../../../services/PlansBenfitsApi';\r\nimport OwnerPetsApi from '../../../services/OwnerPetsApi';\r\n\r\ninterface PreviewImage {\r\n  file: File | null;\r\n  imageUrl: string;\r\n  image: string;\r\n}\r\n\r\ninterface arrayPeoples {\r\n  name: string;\r\n  cpf_cgc: string;\r\n  city: string;\r\n  state: string;\r\n}\r\ninterface arrayBenefits {\r\n  plan_id: string;\r\n  benefit_id: {\r\n    benefit_id: string;\r\n    description: string;\r\n    status: string;\r\n    icon: string;\r\n  };\r\n  quantity: string;\r\n  status: string;\r\n}\r\ninterface arrayPets {\r\n  pet_id: string;\r\n  people_id: string;\r\n  pet_name: string;\r\n  picture_face: string;\r\n}\r\n\r\nconst ProfileCustomer: React.FC = () => {\r\n  // const id = 6;\r\n  const [isCustomer, setIsCustomers] = useState<arrayPeoples[]>([]);\r\n  const [isBenefits, setIsBenefits] = useState<arrayBenefits[]>([]);\r\n  const [isPets, setIsPets] = useState<arrayPets[]>([]);\r\n  const [previewImage, setPreviewImage] = useState<PreviewImage>({\r\n    file: null,\r\n    imageUrl: '',\r\n    image: '',\r\n  });\r\n\r\n  const handleSelectImage = (event: ChangeEvent<HTMLInputElement>): unknown => {\r\n    if (!event.target.files) {\r\n      return;\r\n    }\r\n    const selectedImage = Array.from(event.target.files);\r\n    const imageUrl = URL.createObjectURL(selectedImage[0]);\r\n    setPreviewImage({\r\n      file: selectedImage[0],\r\n      imageUrl,\r\n      image: selectedImage[0].name,\r\n    });\r\n    console.log(previewImage);\r\n  };\r\n\r\n  const listCustomer = useCallback(() => {\r\n    PeopleApi.get('6')\r\n      .then(result => {\r\n        setIsCustomers(result.data.response);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }, []);\r\n\r\n  const listPets = useCallback(() => {\r\n    OwnerPetsApi.get('6')\r\n      .then(result => {\r\n        setIsPets(result.data.response);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }, []);\r\n  const listPlansBenefits = useCallback(() => {\r\n    PlansBenfitsApi.get(2)\r\n      .then(result => {\r\n        setIsBenefits(result.data.response);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    listCustomer();\r\n    listPlansBenefits();\r\n    listPets();\r\n  }, [listCustomer, listPets, listPlansBenefits]);\r\n\r\n  return (\r\n    <Container>\r\n      <Form noValidate autoComplete=\"off\">\r\n        <ContainerTopProfile>\r\n          <ImageProfile className=\"personal-image\">\r\n            <label className=\"label\" htmlFor=\"firstName\">\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/png,image/jpeg\"\r\n                name=\"photoProfile\"\r\n                onChange={handleSelectImage}\r\n              />\r\n              <figure className=\"personal-figure\">\r\n                <img\r\n                  src=\"https://i.pinimg.com/564x/92/a8/bc/92a8bc8930210575afc00928edfb3981.jpg\"\r\n                  alt=\"Perfil\"\r\n                  className=\"personal-avatar\"\r\n                />\r\n                <figcaption className=\"personal-figcaption\">\r\n                  <FiCamera />\r\n                  {/* <img\r\n                    src=\"https://raw.githubusercontent.com/ThiagoLuizNunes/angular-boilerplate/master/src/assets/imgs/camera-white.png\"\r\n                    alt=\"sdf\"\r\n                  /> */}\r\n                </figcaption>\r\n              </figure>\r\n            </label>\r\n          </ImageProfile>\r\n\r\n          {/* <div className=\"personal-image\">\r\n            <label className=\"label\" htmlFor=\"l\">\r\n              <input type=\"file\" />\r\n              <figure className=\"personal-figure\">\r\n                <img\r\n                  src=\"https://avatars1.githubusercontent.com/u/11435231?s=460&v=4\"\r\n                  className=\"personal-avatar\"\r\n                  alt=\"avatar\"\r\n                />\r\n                <figcaption className=\"personal-figcaption\">\r\n                  <img\r\n                    src=\"https://raw.githubusercontent.com/ThiagoLuizNunes/angular-boilerplate/master/src/assets/imgs/camera-white.png\"\r\n                    alt=\"j\"\r\n                  />\r\n                </figcaption>\r\n              </figure>\r\n            </label>\r\n          </div> */}\r\n\r\n          <DataProfile>\r\n            {isCustomer &&\r\n              isCustomer.map(row => {\r\n                return (\r\n                  <>\r\n                    <p style={{ textAlign: 'left' }}>{row.name}</p>\r\n                    <p style={{ textAlign: 'left' }}>{row.cpf_cgc}</p>\r\n                    <p style={{ textAlign: 'left' }}>{row.city}</p>\r\n                  </>\r\n                );\r\n              })}\r\n          </DataProfile>\r\n        </ContainerTopProfile>\r\n        <ContainerBody>\r\n          <ContainerDetail>\r\n            <p>Eventos</p>\r\n            <EventsDetais\r\n              style={{ justifyContent: 'space-between', padding: '0 10px' }}\r\n            >\r\n              <Avatar\r\n                style={{ width: 45, height: 45, borderRadius: '50%' }}\r\n                src=\"https://cdn0.iconfinder.com/data/icons/pet-lover/64/shower-dog-pets-cleaning-512.png\"\r\n                alt=\"Perfil\"\r\n              />\r\n              <p>Banho e Tosa</p>\r\n              <FiChevronRight />\r\n            </EventsDetais>\r\n            <EventsDetais\r\n              style={{ justifyContent: 'space-between', padding: '0 10px' }}\r\n            >\r\n              <Avatar\r\n                style={{ width: 45, height: 45, borderRadius: '50%' }}\r\n                src=\"https://cdn0.iconfinder.com/data/icons/pet-lover/64/shower-dog-pets-cleaning-512.png\"\r\n                alt=\"Perfil\"\r\n              />\r\n              <p>Cirurgia de Alto Risco</p>\r\n              <FiChevronRight />\r\n            </EventsDetais>\r\n            <EventsDetais\r\n              style={{ justifyContent: 'space-between', padding: '0 10px' }}\r\n            >\r\n              <Avatar\r\n                style={{ width: 45, height: 45, borderRadius: '50%' }}\r\n                src=\"https://cdn0.iconfinder.com/data/icons/pet-lover/64/shower-dog-pets-cleaning-512.png\"\r\n                alt=\"Perfil\"\r\n              />\r\n              <p>Vacina</p>\r\n              <FiChevronRight />\r\n            </EventsDetais>\r\n          </ContainerDetail>\r\n          <hr />\r\n          <ContainerVourchers>\r\n            <p>Vouchers</p>\r\n            {isBenefits &&\r\n              isBenefits.map(row => {\r\n                return (\r\n                  <EventsDetais style={{ width: '46%', margin: '0 2%' }}>\r\n                    <Avatar\r\n                      src={`../../../assets/icons/${row.benefit_id.icon}`}\r\n                      alt={row.benefit_id.icon.split('.')[0]}\r\n                    />\r\n                    <p>\r\n                      {row.benefit_id.description}\r\n                      <br />\r\n                      <span>{row.quantity}</span>\r\n                    </p>\r\n                  </EventsDetais>\r\n                );\r\n              })}\r\n          </ContainerVourchers>\r\n          <hr />\r\n          <ContainerPets>\r\n            <p>Meus Pets</p>\r\n            {isPets &&\r\n              isPets.map(row => {\r\n                return (\r\n                  <PetsDetails\r\n                    style={{\r\n                      justifyContent: 'space-between',\r\n                      padding: '0 10px',\r\n                      backgroundColor: '#F9D448',\r\n                      color: '#fff',\r\n                    }}\r\n                  >\r\n                    <Avatar\r\n                      style={{\r\n                        width: 50,\r\n                        height: 50,\r\n                        borderRadius: '50%',\r\n                        border: '2px solid #fff',\r\n                      }}\r\n                      src={`../../../assets/petPictures/${row.picture_face}`}\r\n                      alt=\"ProfilePets\"\r\n                    />\r\n\r\n                    <p style={{ fontWeight: 700 }}>\r\n                      {row.pet_name}\r\n                      <br />\r\n                      <span style={{ fontWeight: 400, fontSize: 16 }}>\r\n                        2 Anos\r\n                      </span>\r\n                    </p>\r\n                    <FiChevronRight />\r\n                  </PetsDetails>\r\n                );\r\n              })}\r\n          </ContainerPets>\r\n        </ContainerBody>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProfileCustomer;\r\n","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Accreditations\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Accreditations\\FormAccreditations\\index.tsx",["436","437","438","439","440","441","442"],"/* eslint-disable import/no-duplicates */\r\nimport { Grid } from '@material-ui/core';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { AiOutlineUser } from 'react-icons/ai';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\n\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\n// import Image from 'material-ui-image';\r\nimport { border } from 'polished';\r\nimport Button from '../../../../components/Button';\r\nimport Input from '../../../../components/InputLabelPure';\r\nimport MenuPrincipalLeft from '../../../../components/MenuPrincipalLeft';\r\n\r\nimport Select from '../../../../components/Select';\r\nimport {\r\n  Container,\r\n  Content,\r\n  GridHeaderSearch,\r\n  Form,\r\n  ContainerDog,\r\n  ContainerDogDesc,\r\n} from './styles';\r\nimport HealthPlansApi from '../../../../services/HealthPlansApi';\r\nimport SellerApi from '../../../../services/SellerApi';\r\nimport AccreditationsApi, {\r\n  PropsAccreditations,\r\n} from '../../../../services/AccreditationsApi';\r\n// import { PropsAccreditations } from '../../../services/AccreditationsApi';\r\nimport Navbar from '../../../../components/MenuMobile/Navbar';\r\nimport Loading from '../../../../components/Loading';\r\nimport InputText from '../../../../components/InputText';\r\nimport InputMoney from '../../../../components/InputMoney';\r\n\r\ninterface arrayList {\r\n  value: string;\r\n  label: string;\r\n}\r\ninterface PropsHistory {\r\n  accre: PropsAccreditations;\r\n}\r\n\r\nconst FormAccreditations: React.FC = () => {\r\n  const [id, setId] = useState<number>(0);\r\n  const history = useHistory();\r\n  // const [dataAcc, setDataAcc] = useState<PropsAccreditations[]>([]);\r\n  const methods = useForm();\r\n  const { reset } = methods;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isHealthPlans, setIsHealthPlans] = useState<arrayList[]>([]);\r\n  const [isSeller, setIsSeller] = useState<arrayList[]>([]);\r\n\r\n  const onSubmit = useCallback(async data => {\r\n    console.log(data);\r\n    // await AccreditationsApi.create(data);\r\n    // history.push('/');\r\n    if (id) {\r\n      // UPDATE\r\n    } else {\r\n      // CREATE\r\n    }\r\n\r\n    // if (!id) {\r\n\r\n    //     .then(response => {\r\n    //       console.log(response);\r\n    //     })\r\n    //     .catch(error => {\r\n    //       console.log(error);\r\n    //     });\r\n    // } else {\r\n    //   AccreditationsApi.put(data)\r\n    //     .then(response => {\r\n    //       console.log(response);\r\n    //     })\r\n    //     .catch(error => {\r\n    //       console.log(error);\r\n    //     });\r\n    // }\r\n  }, []);\r\n  // const listHealthPlans = () => {\r\n  //   const array: arrayList[] = [];\r\n  //   HealthPlansApi.getAll()\r\n  //     .then(result => {\r\n  //       result.data.response.forEach(item => {\r\n  //         array.push({ value: item.plan_id, label: item.description });\r\n  //         // console.log(item);\r\n  //       });\r\n  //       setIsHealthPlans(array);\r\n  //     })\r\n  //     .catch(e => {\r\n  //       console.log(e);\r\n  //     });\r\n  // };\r\n  // const listSeller = () => {\r\n  //   const array: arrayList[] = [];\r\n\r\n  //   SellerApi.getAll()\r\n  //     .then(result => {\r\n  //       result.data.response.forEach(item => {\r\n  //         array.push({ value: item.people_id, label: item.name });\r\n  //       });\r\n  //       setIsSeller(array);\r\n  //     })\r\n  //     .catch(e => {\r\n  //       console.log(e);\r\n  //     });\r\n  // };\r\n  // const listAccreditations = useCallback(() => {\r\n  //   setIsLoading(true);\r\n  //   AccreditationsApi.get(id)\r\n  //     .then(result => {\r\n  //       console.log(result.data.response[0]);\r\n  //       reset(result.data.response[0]);\r\n  //       setTimeout(() => {\r\n  //         setIsLoading(false);\r\n  //       }, 1000);\r\n  //     })\r\n  //     .catch(e => {\r\n  //       console.log(e);\r\n  //     });\r\n  // }, [id, reset]);\r\n\r\n  useEffect(() => {\r\n    const dataHistory = (history?.location?.state as PropsHistory)?.accre;\r\n    if (dataHistory.accreditation_id !== null) {\r\n      console.log(dataHistory);\r\n      setId(dataHistory.accreditation_id);\r\n    }\r\n\r\n    async function fetchData() {\r\n      const result = await AccreditationsApi.get(id);\r\n      reset(result.data.response[0]);\r\n      // setData(result.data.response[0]);\r\n\r\n      // setIsLoading(false);\r\n    }\r\n    fetchData();\r\n    // listAccreditations();\r\n    // listHealthPlans();\r\n    // listSeller();\r\n  }, [history, id, reset]);\r\n\r\n  // useEffect(() => {\r\n  //   const dataHistory = (history?.location?.state as PropsHistory)?.accre;\r\n  //   console.log(history);\r\n  //   if (dataHistory !== null) {\r\n  //     // setId(dataHistory.people_id);\r\n  //   }\r\n\r\n  // }, [history, history?.location?.state, id, reset]);\r\n\r\n  // const deleteB = useCallback(\r\n  //   async (idDel: number) => {\r\n  //     await api.delete(`/books/${idDel}`);\r\n  //     const newData = data?.filter(book => book.id !== idDel);\r\n  //     setData(newData);\r\n  //   },\r\n  //   [data],\r\n  // );\r\n\r\n  const durations = [\r\n    { value: '6', label: '06 Mes' },\r\n    { value: '12', label: '12 Meses' },\r\n    { value: '18', label: '18 Meses' },\r\n    { value: '24', label: '24 Meses' },\r\n    { value: '30', label: '30 Meses' },\r\n    { value: '36', label: '36 Meses' },\r\n  ];\r\n  const status = [\r\n    { value: '0', label: 'Ativo' },\r\n    { value: '1', label: 'Inativo' },\r\n  ];\r\n  const petsnumber = [\r\n    { value: '1', label: '01' },\r\n    { value: '2', label: '02' },\r\n    { value: '3', label: '03' },\r\n  ];\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <Loading isLoading={isLoading} full />\r\n      <Container container>\r\n        <MenuPrincipalLeft pages={['all']} />\r\n\r\n        <Content>\r\n          <GridHeaderSearch\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Link to=\"/\">\r\n              <FiArrowLeft />\r\n              Voltar\r\n            </Link>\r\n\r\n            <Navbar name={id ? 'Editar Cliente' : 'Criar Novo Cliente'} />\r\n            <Grid\r\n              className=\"title-header\"\r\n              container\r\n              item\r\n              sm={12}\r\n              alignItems=\"center\"\r\n              justify=\"center\"\r\n              direction=\"column\"\r\n            >\r\n              <p style={{ fontWeight: 500, color: '#9d9d9c' }}>\r\n                {id ? 'Editar Cliente' : 'Criar Novo Cliente'}\r\n              </p>\r\n              <hr\r\n                style={{\r\n                  border: 0,\r\n                  borderBottom: '2px solid #17a0ae',\r\n                  width: 130,\r\n                  marginTop: 5,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </GridHeaderSearch>\r\n          <Form noValidate onSubmit={methods.handleSubmit(onSubmit)}>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={6} md={5}>\r\n                <Input\r\n                  style={{ width: '80%' }}\r\n                  name=\"name\"\r\n                  label=\"Nome Completo\"\r\n                  icon={AiOutlineUser}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={1}>\r\n                <Button\r\n                  background=\"primary\"\r\n                  style={{ width: '100%', display: 'flex' }}\r\n                >\r\n                  ...\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={4} sm={6} md={2}>\r\n                <Input\r\n                  name=\"date_register\"\r\n                  label=\"Data de Associacao\"\r\n                  mask=\"99/99/9999\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} sm={6} md={4}>\r\n                <Select\r\n                  name=\"plan_id\"\r\n                  placeholder=\"Plano\"\r\n                  options={isHealthPlans}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={4}>\r\n                <Select\r\n                  name=\"duration\"\r\n                  placeholder=\"Prazo em Meses\"\r\n                  options={durations}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} sm={6} md={4}>\r\n                <Select\r\n                  name=\"regitration_user\"\r\n                  placeholder=\"Vendedor\"\r\n                  options={isSeller}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} sm={6} md={4}>\r\n                <Input\r\n                  name=\"disqualification_date\"\r\n                  label=\"Data de Encerramento\"\r\n                  mask=\"99/99/9999\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} sm={6} md={4}>\r\n                <Select\r\n                  name=\"pets_numbers\"\r\n                  placeholder=\"Qtde de Animais\"\r\n                  options={petsnumber}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} sm={6} md={4}>\r\n                <Select name=\"status\" placeholder=\"Situação\" options={status} />\r\n              </Grid>\r\n              <Grid item xs={6} sm={6} md={4}>\r\n                <InputMoney name=\"amount\" label=\"Valor Total\" />\r\n              </Grid>\r\n            </Grid>\r\n            {/* nome raça peso idade caracteristica */}\r\n            <Grid container xs={12} sm={12} md={12}>\r\n              <Grid item xs={12} sm={6} md={4} style={{ padding: 5 }}>\r\n                <ContainerDog>\r\n                  <div\r\n                    className=\"profile-dog\"\r\n                    style={{\r\n                      background: `url(${process.env.PUBLIC_URL}/assets/perfildog.jpg) no-repeat`,\r\n                    }}\r\n                  />\r\n                  <ContainerDogDesc>\r\n                    <Input\r\n                      name=\"name1\"\r\n                      label=\"Nome\"\r\n                      borderColor=\"#fff\"\r\n                      iconColor=\"#fff\"\r\n                      icon={AiOutlineUser}\r\n                    />\r\n                    <Input\r\n                      name=\"breed\"\r\n                      label=\"Raça\"\r\n                      borderColor=\"#fff\"\r\n                      iconColor=\"#fff\"\r\n                    />\r\n                    <Input\r\n                      name=\"weigth\"\r\n                      label=\"Peso\"\r\n                      borderColor=\"#fff\"\r\n                      iconColor=\"#fff\"\r\n                    />\r\n                    <Input\r\n                      name=\"age\"\r\n                      label=\"Idade\"\r\n                      borderColor=\"#fff\"\r\n                      iconColor=\"#fff\"\r\n                    />\r\n                    <InputText\r\n                      name=\"pets[0].caracter\"\r\n                      label=\"Características\"\r\n                      borderColor=\"#fff\"\r\n                    />\r\n                  </ContainerDogDesc>\r\n                </ContainerDog>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={4} style={{ padding: 5 }}>\r\n                <ContainerDog>\r\n                  <div\r\n                    className=\"profile-dog\"\r\n                    style={{\r\n                      background: `url(${process.env.PUBLIC_URL}/assets/perfildog.jpg) no-repeat`,\r\n                    }}\r\n                  />\r\n                  <ContainerDogDesc>\r\n                    <Input\r\n                      name=\"name2\"\r\n                      label=\"Nome\"\r\n                      borderColor=\"#fff\"\r\n                      iconColor=\"#fff\"\r\n                      icon={AiOutlineUser}\r\n                    />\r\n                    <Input\r\n                      name=\"breed\"\r\n                      label=\"Raça\"\r\n                      borderColor=\"#fff\"\r\n                      iconColor=\"#fff\"\r\n                    />\r\n                    <Input\r\n                      name=\"weigth\"\r\n                      label=\"Peso\"\r\n                      borderColor=\"#fff\"\r\n                      iconColor=\"#fff\"\r\n                    />\r\n                    <Input\r\n                      name=\"age\"\r\n                      label=\"Idade\"\r\n                      borderColor=\"#fff\"\r\n                      iconColor=\"#fff\"\r\n                    />\r\n                    <InputText\r\n                      name=\"pets[1].caracter\"\r\n                      label=\"Características\"\r\n                      borderColor=\"#fff\"\r\n                    />\r\n                  </ContainerDogDesc>\r\n                </ContainerDog>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={4} style={{ padding: 5 }}>\r\n                <ContainerDog>\r\n                  <div\r\n                    className=\"profile-dog\"\r\n                    style={{\r\n                      background: `url(${process.env.PUBLIC_URL}/assets/perfildog.jpg) no-repeat`,\r\n                    }}\r\n                  />\r\n                  <ContainerDogDesc>\r\n                    <Input\r\n                      name=\"name3\"\r\n                      label=\"Características\"\r\n                      borderColor=\"#fff\"\r\n                      iconColor=\"#fff\"\r\n                      icon={AiOutlineUser}\r\n                    />\r\n                    <Input\r\n                      name=\"breed\"\r\n                      label=\"Raça\"\r\n                      borderColor=\"#fff\"\r\n                      iconColor=\"#fff\"\r\n                    />\r\n                    <Input\r\n                      name=\"weigth\"\r\n                      label=\"Peso\"\r\n                      borderColor=\"#fff\"\r\n                      iconColor=\"#fff\"\r\n                    />\r\n                    <Input\r\n                      name=\"age\"\r\n                      label=\"Idade\"\r\n                      borderColor=\"#fff\"\r\n                      iconColor=\"#fff\"\r\n                    />\r\n                    <InputText\r\n                      name=\"pets[2].caracter\"\r\n                      label=\"nome\"\r\n                      borderColor=\"#fff\"\r\n                    />\r\n                  </ContainerDogDesc>\r\n                </ContainerDog>\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              background=\"primary\"\r\n              style={{ marginTop: 15 }}\r\n            >\r\n              {id ? 'Atualizar' : 'Cadastar'}\r\n            </Button>\r\n          </Form>\r\n        </Content>\r\n      </Container>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default FormAccreditations;\r\n","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\perfil\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\Logup\\index.tsx",["443","444","445"],"import React, { useEffect, useState } from 'react';\r\n// import {\r\n//   withStyles,\r\n//   Theme,\r\n//   createStyles,\r\n//   makeStyles,\r\n// } from '@material-ui/core/styles';\r\nimport { Grid, IconButton } from '@material-ui/core';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { AiOutlineUser } from 'react-icons/ai';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { IoPersonCircle } from 'react-icons/io5';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport { RiLock2Line } from 'react-icons/ri';\r\nimport PeopleApi from '../../../services/PeopleApi';\r\n\r\nimport Button from '../../../components/Button';\r\nimport {\r\n  Container,\r\n  GridHeaderSearch,\r\n  Content,\r\n  FormCustom,\r\n  LogoNav,\r\n  LinkLogup,\r\n} from './styles';\r\nimport Input from '../../../components/InputLabelPure';\r\nimport Select from '../../../components/Select';\r\nimport Loading from '../../../components/Loading';\r\n\r\ninterface RouteParams {\r\n  id: string;\r\n}\r\n\r\nconst UserLogup: React.FC = () => {\r\n  const { id } = useParams<RouteParams>();\r\n\r\n  const methods = useForm({\r\n    shouldUnregister: false,\r\n    defaultValues: { gender: '', kind_people: '' },\r\n  });\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const onSubmit = data => {\r\n    console.log(data);\r\n\r\n    Object.keys(data).forEach(key => {\r\n      if (typeof data[key] === 'object' && data[key] !== null) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        data[key] = data[key].value;\r\n      }\r\n    });\r\n\r\n    if (!id) {\r\n      PeopleApi.create(data)\r\n        .then(response => {\r\n          console.log(response);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      PeopleApi.put(data)\r\n        .then(response => {\r\n          console.log(response);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const listPeoples = () => {\r\n      setIsLoading(true);\r\n      PeopleApi.get(id)\r\n        .then(result => {\r\n          methods.reset(result.data.response[0]);\r\n          setTimeout(() => {\r\n            setIsLoading(false);\r\n          }, 1000);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    };\r\n    if (id) {\r\n      listPeoples();\r\n    }\r\n  }, []);\r\n\r\n  const kindPeople = [\r\n    { value: '1', label: 'Física' },\r\n    { value: '2', label: 'Jurídica' },\r\n  ];\r\n  const genders = [\r\n    { value: 'M', label: 'Masculino' },\r\n    { value: 'F', label: 'Feminino' },\r\n  ];\r\n  const plans = [\r\n    { value: '1', label: 'Master Light' },\r\n    { value: '2', label: 'Master Gold' },\r\n    { value: '3', label: 'Master Premium ' },\r\n  ];\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <Loading isLoading={isLoading} />\r\n      <Container\r\n        item\r\n        sm={12}\r\n        style={{ width: '100%', display: 'flex', height: '100vh' }}\r\n      >\r\n        <Content>\r\n          <GridHeaderSearch container>\r\n            <LogoNav />\r\n\r\n            {/* <Link to=\"/register_animal_breed\" className=\"add-user\">\r\n              <Button background=\"primary\" style={{ width: 180 }}>\r\n                Adicionar Raça\r\n              </Button>\r\n            </Link> */}\r\n\r\n            <IoPersonCircle\r\n              color=\"#fff\"\r\n              fontSize=\"40px\"\r\n              style={{ position: 'absolute', right: '10px', top: '10px' }}\r\n            />\r\n\r\n            <Link to={{ pathname: `../login/${id}` }}>\r\n              <LinkLogup\r\n                style={{ position: 'absolute', left: '7%', top: '10px' }}\r\n              >\r\n                <FiArrowLeft />\r\n                Voltar\r\n              </LinkLogup>\r\n            </Link>\r\n          </GridHeaderSearch>\r\n\r\n          <FormCustom noValidate onSubmit={methods.handleSubmit(onSubmit)}>\r\n            <Grid\r\n              container\r\n              spacing={1}\r\n              style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                position: 'relative',\r\n                justifyContent: 'space-around',\r\n                top: '70px',\r\n                boxShadow: '0 5px 25px rgb(0 0 0 / 20%)',\r\n                borderRadius: '10px',\r\n                padding: '10px',\r\n              }}\r\n            >\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <Input name=\"name\" label=\"Nome Completo\" />\r\n              </Grid>\r\n              <Grid item lg={2} md={2} sm={4} xs={6}>\r\n                <Select\r\n                  name=\"gender\"\r\n                  placeholder=\"Sexo\"\r\n                  options={genders}\r\n                  required={false}\r\n                />\r\n                {methods.errors.gender && (\r\n                  <p className=\"required-form\">\r\n                    <span>* </span>\r\n                    Este campo é obrigatório.\r\n                  </p>\r\n                )}\r\n              </Grid>\r\n              <Grid item lg={2} md={2} sm={4} xs={6}>\r\n                <Input mask=\"99/99/9999\" name=\"date_birth\" label=\"Nascimento\" />\r\n              </Grid>\r\n              <Grid item lg={2} md={2} sm={4} xs={12}>\r\n                <Select\r\n                  name=\"kind_people\"\r\n                  placeholder=\"Tipo Pessoa\"\r\n                  options={kindPeople}\r\n                  required={false}\r\n                />\r\n                {methods.errors.kind_people && (\r\n                  <p className=\"required-form\">\r\n                    <span>* </span>\r\n                    Este campo é obrigatório.\r\n                  </p>\r\n                )}\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <Input name=\"cpf_cgc\" label=\"CPF / CNPJ\" />\r\n              </Grid>\r\n              <Grid item lg={4} md={4} sm={8} xs={8}>\r\n                <Input name=\"identity_document\" label=\"RG\" />\r\n              </Grid>\r\n              <Grid item lg={2} md={2} sm={4} xs={4}>\r\n                <Input name=\"issuing_entity\" label=\"Orgão Emissor\" />\r\n              </Grid>\r\n\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <Input name=\"email\" label=\"Email\" />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <Input name=\"observations\" label=\"Observações\" />\r\n              </Grid>\r\n\r\n              <Grid item lg={3} md={3} sm={4} xs={6}>\r\n                <Input name=\"telephone01\" label=\"Telefone\" />\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={4} xs={6}>\r\n                <Input name=\"telephone02\" label=\"Celular\" />\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={4} xs={6}>\r\n                <Input name=\"telephone03\" label=\"Celular\" />\r\n              </Grid>\r\n\r\n              <Grid item lg={3} md={3} sm={3} xs={6}>\r\n                <Input name=\"cep\" label=\"Cep\" />\r\n              </Grid>\r\n\r\n              <Grid item lg={6} md={6} sm={9} xs={12}>\r\n                <Input name=\"address\" label=\"Endereço\" />\r\n              </Grid>\r\n              <Grid item lg={4} md={4} sm={8} xs={8}>\r\n                <Input name=\"neighborhood\" label=\"Bairro\" />\r\n              </Grid>\r\n              <Grid item lg={2} md={2} sm={4} xs={4}>\r\n                <Input name=\"number_address\" label=\"Número\" />\r\n              </Grid>\r\n\r\n              <Grid item lg={6} md={6} sm={8} xs={12}>\r\n                <Input name=\"city\" label=\"Cidade\" />\r\n              </Grid>\r\n              <Grid item lg={2} md={2} sm={4} xs={4}>\r\n                <Input name=\"state\" label=\"UF\" />\r\n              </Grid>\r\n              <Grid item lg={4} md={4} sm={12} xs={8}>\r\n                <Input name=\"address_complement\" label=\"Complemento\" />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={6} xs={12}>\r\n                <Input name=\"usu\" label=\"Usuário\" icon={AiOutlineUser} />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={6} xs={12}>\r\n                <Input\r\n                  name=\"password\"\r\n                  label=\"Senha\"\r\n                  icon={RiLock2Line}\r\n                  type=\"password\"\r\n                />\r\n              </Grid>\r\n\r\n              <Link to=\"/my_pets\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  background=\"primary\"\r\n                  style={{ marginTop: 15 }}\r\n                >\r\n                  {id ? 'Atualizar' : 'Cadastar'}\r\n                </Button>\r\n              </Link>\r\n            </Grid>\r\n          </FormCustom>\r\n        </Content>\r\n      </Container>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default UserLogup;\r\n","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\Login\\index.tsx",["446","447","448","449","450"],"import React, { useEffect, useState } from 'react';\r\n// import {\r\n//   withStyles,\r\n//   Theme,\r\n//   createStyles,\r\n//   makeStyles,\r\n// } from '@material-ui/core/styles';\r\nimport { Grid, IconButton } from '@material-ui/core';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { IoPersonCircle } from 'react-icons/io5';\r\nimport { AiOutlineUser, AiOutlineMail } from 'react-icons/ai';\r\nimport { RiLock2Line } from 'react-icons/ri';\r\n\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Button from '../../../components/Button';\r\nimport {\r\n  Container,\r\n  GridHeaderSearch,\r\n  Content,\r\n  ContainerUser,\r\n  LogoNav,\r\n  TituloCadastro,\r\n  LinkLogup,\r\n  ListaItens,\r\n} from './styles';\r\nimport Input from '../../../components/InputLabelPure';\r\nimport HealthPlansApi, {\r\n  PropsHealthPlans,\r\n} from '../../../services/HealthPlansApi';\r\n\r\ninterface RouteParams {\r\n  id: string;\r\n}\r\n\r\nconst UserLogin: React.FC = () => {\r\n  const [islistHealthPlans, setListHealthPlans] = useState<PropsHealthPlans[]>(\r\n    [],\r\n  );\r\n  const { id } = useParams<RouteParams>(); // Or maybe have 'number'?\r\n  // const {id} = useParams({id: true});\r\n  console.log(id);\r\n  // console.log('TESTE DE ID: ', id);\r\n\r\n  const methods = useForm({\r\n    shouldUnregister: false,\r\n  });\r\n\r\n  const onSubmit = data => console.log(data);\r\n\r\n  const listHealthPlans = () => {\r\n    HealthPlansApi.get(id)\r\n      .then(result => {\r\n        console.log(result);\r\n        setListHealthPlans(result[0]);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // listHealthPlans();\r\n  }, []);\r\n\r\n  // const classes = useStyles();\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <Container\r\n        item\r\n        sm={12}\r\n        style={{ width: '100%', display: 'flex', height: '100vh' }}\r\n      >\r\n        <Content>\r\n          <GridHeaderSearch container>\r\n            <LogoNav />\r\n\r\n            <IoPersonCircle\r\n              color=\"#fff\"\r\n              fontSize=\"40px\"\r\n              style={{ position: 'absolute', right: '10px', top: '10px' }}\r\n            />\r\n          </GridHeaderSearch>\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              position: 'relative',\r\n              justifyContent: 'space-evenly',\r\n              top: '100px',\r\n            }}\r\n          >\r\n            <ContainerUser\r\n              lg={4}\r\n              md={8}\r\n              sm={8}\r\n              xs={12}\r\n              style={{ background: '#ffcc29' }}\r\n            >\r\n              <Grid\r\n                item\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  position: 'relative',\r\n                  justifyContent: 'center',\r\n                  flexDirection: 'column',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    font: 'bold 40px Ubuntu',\r\n                    color: '#000',\r\n                    textTransform: 'uppercase',\r\n                    position: 'absolute',\r\n                    top: '30px',\r\n                    textShadow: '2px 2px 4px rgba(0,0,0,.3)',\r\n                  }}\r\n                >\r\n                  {/* {islistHealthPlans &&\r\n                    islistHealthPlans.map(row => {\r\n                      return <h2>{row.description}</h2>;\r\n                    })} */}\r\n                  Plano Light\r\n                </div>\r\n                <div\r\n                  style={{ position: 'absolute', top: '120px', left: '35%' }}\r\n                >\r\n                  R$\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    color: '#17a0ae',\r\n                    font: '700 80px Ubuntu',\r\n                    position: 'absolute',\r\n                    top: '110px',\r\n                    textShadow: '2px 2px 4px rgba(0,0,0,.3)',\r\n                  }}\r\n                >\r\n                  69\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    position: 'absolute',\r\n                    top: '120px',\r\n                    right: '34%',\r\n                    color: '#17a0ae',\r\n                  }}\r\n                >\r\n                  ,90\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    position: 'absolute',\r\n                    top: '160px',\r\n                    right: '31%',\r\n                    color: '#000',\r\n                  }}\r\n                >\r\n                  /mes\r\n                </div>\r\n\r\n                <ListaItens\r\n                  style={{ position: 'absolute', top: '250px', left: '30%' }}\r\n                >\r\n                  <li>Consulta</li>\r\n                  <li>Consultas Emergenciais</li>\r\n                  <li>Exames Laboratoriais Simples</li>\r\n                  <li>Cirurgia Simples ou Castração</li>\r\n                  <li>Exames de Imagem</li>\r\n                  <li>Atendimento Ambulatorial</li>\r\n                  <li>Vacina (polivalente)</li>\r\n                </ListaItens>\r\n              </Grid>\r\n            </ContainerUser>\r\n            <ContainerUser lg={4} md={8} sm={8} xs={12}>\r\n              <Grid\r\n                item\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  position: 'relative',\r\n                  justifyContent: 'center',\r\n                  flexDirection: 'column',\r\n                }}\r\n              >\r\n                <TituloCadastro>Faça Login</TituloCadastro>\r\n\r\n                <div style={{ marginTop: '70px' }}>\r\n                  <Input name=\"user\" label=\"Usuário\" icon={AiOutlineUser} />\r\n                </div>\r\n\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <Input name=\"password\" label=\"Senha\" icon={RiLock2Line} />\r\n                </div>\r\n\r\n                <Link\r\n                  style={{ width: '100%', position: 'relative', left: '20%' }}\r\n                  to=\"/my_pets\"\r\n                >\r\n                  <Button\r\n                    background=\"primary\"\r\n                    style={{ marginTop: 30, width: '60%' }}\r\n                  >\r\n                    Entrar\r\n                  </Button>\r\n                </Link>\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                className=\"linkLogup\"\r\n                style={{\r\n                  display: 'flex',\r\n                  // alignItems: 'center',\r\n                  position: 'relative',\r\n                  justifyContent: 'space-evenly',\r\n                  // flexDirection: 'column',\r\n                  margin: '10px',\r\n                }}\r\n              >\r\n                <Link to={{ pathname: `../logup/${id}` }}>\r\n                  <LinkLogup>Registrar-se</LinkLogup>\r\n                </Link>\r\n\r\n                <Link to={{ pathname: `../first_access/${id}` }}>\r\n                  <LinkLogup>Primeiro Acesso</LinkLogup>\r\n                </Link>\r\n              </Grid>\r\n            </ContainerUser>\r\n          </Grid>\r\n        </Content>\r\n      </Container>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\FirstAccess\\index.tsx",["451","452","453","454","455"],"import React, { useEffect, useState } from 'react';\r\n// import {\r\n//   withStyles,\r\n//   Theme,\r\n//   createStyles,\r\n//   makeStyles,\r\n// } from '@material-ui/core/styles';\r\nimport { Grid, IconButton } from '@material-ui/core';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { IoPersonCircle } from 'react-icons/io5';\r\nimport { AiOutlineUser, AiOutlineMail } from 'react-icons/ai';\r\nimport { RiLock2Line } from 'react-icons/ri';\r\n\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport Button from '../../../components/Button';\r\nimport {\r\n  Container,\r\n  GridHeaderSearch,\r\n  Content,\r\n  ContainerUser,\r\n  LogoNav,\r\n  TituloCadastro,\r\n  LinkLogup,\r\n  ListaItens,\r\n} from './styles';\r\nimport HealthPlansApi, {\r\n  PropsHealthPlans,\r\n} from '../../../services/HealthPlansApi';\r\nimport Input from '../../../components/InputLabelPure';\r\n\r\ninterface RouteParams {\r\n  id: string;\r\n}\r\n\r\nconst FirstAccess: React.FC = () => {\r\n  const [islistHealthPlans, setListHealthPlans] = useState<PropsHealthPlans[]>(\r\n    [],\r\n  );\r\n  const { id } = useParams<RouteParams>(); // Or maybe have 'number'?\r\n  // const {id} = useParams({id: true});\r\n  console.log(id);\r\n  // console.log('TESTE DE ID: ', id);\r\n\r\n  const methods = useForm({\r\n    shouldUnregister: false,\r\n  });\r\n\r\n  const onSubmit = data => console.log(data);\r\n\r\n  const listHealthPlans = () => {\r\n    HealthPlansApi.get(id)\r\n      .then(result => {\r\n        console.log(result);\r\n        setListHealthPlans(result[0]);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // listHealthPlans();\r\n  }, []);\r\n\r\n  // const classes = useStyles();\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <Container\r\n        item\r\n        sm={12}\r\n        style={{ width: '100%', display: 'flex', height: '100vh' }}\r\n      >\r\n        <Content>\r\n          <GridHeaderSearch container>\r\n            <LogoNav />\r\n\r\n            {/* <Link to=\"/register_animal_breed\" className=\"add-user\">\r\n              <Button background=\"primary\" style={{ width: 180 }}>\r\n                Adicionar Raça\r\n              </Button>\r\n            </Link> */}\r\n\r\n            <IoPersonCircle\r\n              color=\"#fff\"\r\n              fontSize=\"40px\"\r\n              style={{ position: 'absolute', right: '10px', top: '10px' }}\r\n            />\r\n\r\n            <Link to={{ pathname: `../login/${id}` }}>\r\n              <LinkLogup\r\n                style={{ position: 'absolute', left: '7%', top: '10px' }}\r\n              >\r\n                <FiArrowLeft />\r\n                Voltar\r\n              </LinkLogup>\r\n            </Link>\r\n          </GridHeaderSearch>\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              position: 'relative',\r\n              justifyContent: 'space-evenly',\r\n              top: '100px',\r\n            }}\r\n          >\r\n            <ContainerUser\r\n              lg={4}\r\n              md={8}\r\n              sm={8}\r\n              xs={12}\r\n              style={{ background: '#ffcc29' }}\r\n            >\r\n              <Grid\r\n                item\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  position: 'relative',\r\n                  justifyContent: 'center',\r\n                  flexDirection: 'column',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    font: 'bold 40px Ubuntu',\r\n                    color: '#000',\r\n                    textTransform: 'uppercase',\r\n                    position: 'absolute',\r\n                    top: '30px',\r\n                    textShadow: '2px 2px 4px rgba(0,0,0,.3)',\r\n                  }}\r\n                >\r\n                  {/* {islistHealthPlans &&\r\n                    islistHealthPlans.map(row => {\r\n                      return <h2>{row.description}</h2>;\r\n                    })} */}\r\n                  Plano Light\r\n                </div>\r\n                <div\r\n                  style={{ position: 'absolute', top: '120px', left: '35%' }}\r\n                >\r\n                  R$\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    color: '#17a0ae',\r\n                    font: '700 80px Ubuntu',\r\n                    position: 'absolute',\r\n                    top: '110px',\r\n                    textShadow: '2px 2px 4px rgba(0,0,0,.3)',\r\n                  }}\r\n                >\r\n                  69\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    position: 'absolute',\r\n                    top: '120px',\r\n                    right: '34%',\r\n                    color: '#17a0ae',\r\n                  }}\r\n                >\r\n                  ,90\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    position: 'absolute',\r\n                    top: '160px',\r\n                    right: '31%',\r\n                    color: '#000',\r\n                  }}\r\n                >\r\n                  /mes\r\n                </div>\r\n\r\n                <ListaItens\r\n                  style={{ position: 'absolute', top: '250px', left: '30%' }}\r\n                >\r\n                  <li>Consulta</li>\r\n                  <li>Consultas Emergenciais</li>\r\n                  <li>Exames Laboratoriais Simples</li>\r\n                  <li>Cirurgia Simples ou Castração</li>\r\n                  <li>Exames de Imagem</li>\r\n                  <li>Atendimento Ambulatorial</li>\r\n                  <li>Vacina (polivalente)</li>\r\n                </ListaItens>\r\n              </Grid>\r\n            </ContainerUser>\r\n            <ContainerUser lg={4} md={4} sm={8} xs={12}>\r\n              <Grid\r\n                item\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  position: 'relative',\r\n                  justifyContent: 'center',\r\n                  flexDirection: 'column',\r\n                }}\r\n              >\r\n                <TituloCadastro>Definir Senha</TituloCadastro>\r\n\r\n                <div style={{ marginTop: '70px' }}>\r\n                  <Input name=\"user\" label=\"Usuário\" icon={AiOutlineUser} />\r\n                </div>\r\n\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <Input name=\"password\" label=\"Senha\" icon={RiLock2Line} />\r\n                </div>\r\n\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <Input\r\n                    name=\"passwordConfirm\"\r\n                    label=\"Repetir Senha\"\r\n                    icon={RiLock2Line}\r\n                  />\r\n                </div>\r\n\r\n                <Link\r\n                  style={{ width: '100%', position: 'relative', left: '20%' }}\r\n                  to=\"/my_pets\"\r\n                >\r\n                  <Button\r\n                    background=\"primary\"\r\n                    style={{ marginTop: 30, width: '60%' }}\r\n                  >\r\n                    Entrar\r\n                  </Button>\r\n                </Link>\r\n              </Grid>\r\n            </ContainerUser>\r\n          </Grid>\r\n        </Content>\r\n      </Container>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default FirstAccess;\r\n","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\MyPets\\index.tsx",["456","457","458","459","460","461","462"],"import React, { useEffect, useState } from 'react';\r\n// import {\r\n//   withStyles,\r\n//   Theme,\r\n//   createStyles,\r\n//   makeStyles,\r\n// } from '@material-ui/core/styles';\r\nimport { Grid, IconButton } from '@material-ui/core';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { IoPersonCircle } from 'react-icons/io5';\r\nimport { IoMdArrowRoundForward } from 'react-icons/io';\r\nimport { AiOutlineUser, AiOutlineMail } from 'react-icons/ai';\r\nimport { RiLock2Line } from 'react-icons/ri';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../../../components/Button';\r\nimport {\r\n  Container,\r\n  GridHeaderSearch,\r\n  Content,\r\n  Pets,\r\n  LogoNav,\r\n  ContainerDog,\r\n  ContainerDogDesc,\r\n  ContainerInfoDesc,\r\n  InfoItem,\r\n} from './styles';\r\nimport Input from '../../../components/InputLabelPure';\r\nimport InputText from '../../../components/InputText';\r\n\r\nconst MyPets: React.FC = () => {\r\n  const methods = useForm({\r\n    shouldUnregister: false,\r\n  });\r\n\r\n  const onSubmit = data => console.log(data);\r\n\r\n  // const classes = useStyles();\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <Container\r\n        item\r\n        sm={12}\r\n        style={{ width: '100%', display: 'flex', height: '100vh' }}\r\n      >\r\n        <Content>\r\n          <GridHeaderSearch container>\r\n            <LogoNav />\r\n\r\n            <IoPersonCircle\r\n              color=\"#fff\"\r\n              fontSize=\"40px\"\r\n              style={{ position: 'absolute', right: '10px', top: '10px' }}\r\n            />\r\n          </GridHeaderSearch>\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              position: 'relative',\r\n              justifyContent: 'space-evenly',\r\n              // top: '10px',\r\n            }}\r\n          >\r\n            <Grid item lg={3} md={3} sm={6} xs={12}>\r\n              <ContainerDog>\r\n                <div\r\n                  className=\"profile-dog\"\r\n                  style={{\r\n                    background: `url(${process.env.PUBLIC_URL}/assets/perfildog.jpg) no-repeat`,\r\n                  }}\r\n                />\r\n                <ContainerDogDesc>\r\n                  <Input\r\n                    name=\"name1\"\r\n                    label=\"Nome\"\r\n                    borderColor=\"#fff\"\r\n                    iconColor=\"#fff\"\r\n                    icon={AiOutlineUser}\r\n                  />\r\n                  <Input\r\n                    name=\"breed\"\r\n                    label=\"Raça\"\r\n                    borderColor=\"#fff\"\r\n                    iconColor=\"#fff\"\r\n                  />\r\n                  <Input\r\n                    name=\"weigth\"\r\n                    label=\"Peso\"\r\n                    borderColor=\"#fff\"\r\n                    iconColor=\"#fff\"\r\n                  />\r\n                  <Input\r\n                    name=\"age\"\r\n                    label=\"Idade\"\r\n                    borderColor=\"#fff\"\r\n                    iconColor=\"#fff\"\r\n                  />\r\n                  <InputText\r\n                    name=\"pets[0].caracter\"\r\n                    label=\"Características\"\r\n                    borderColor=\"#fff\"\r\n                  />\r\n                </ContainerDogDesc>\r\n              </ContainerDog>\r\n            </Grid>\r\n            <Grid item lg={3} md={3} sm={6} xs={12}>\r\n              <ContainerDog>\r\n                <div\r\n                  className=\"profile-dog\"\r\n                  style={{\r\n                    background: `url(${process.env.PUBLIC_URL}/assets/perfildog.jpg) no-repeat`,\r\n                  }}\r\n                />\r\n                <ContainerDogDesc>\r\n                  <Input\r\n                    name=\"name2\"\r\n                    label=\"Nome\"\r\n                    borderColor=\"#fff\"\r\n                    iconColor=\"#fff\"\r\n                    icon={AiOutlineUser}\r\n                  />\r\n                  <Input\r\n                    name=\"breed\"\r\n                    label=\"Raça\"\r\n                    borderColor=\"#fff\"\r\n                    iconColor=\"#fff\"\r\n                  />\r\n                  <Input\r\n                    name=\"weigth\"\r\n                    label=\"Peso\"\r\n                    borderColor=\"#fff\"\r\n                    iconColor=\"#fff\"\r\n                  />\r\n                  <Input\r\n                    name=\"age\"\r\n                    label=\"Idade\"\r\n                    borderColor=\"#fff\"\r\n                    iconColor=\"#fff\"\r\n                  />\r\n                  <InputText\r\n                    name=\"pets[1].caracter\"\r\n                    label=\"Características\"\r\n                    borderColor=\"#fff\"\r\n                  />\r\n                </ContainerDogDesc>\r\n              </ContainerDog>\r\n            </Grid>\r\n            <Grid item lg={3} md={3} sm={6} xs={12}>\r\n              <ContainerDog>\r\n                <div\r\n                  className=\"profile-dog\"\r\n                  style={{\r\n                    background: `url(${process.env.PUBLIC_URL}/assets/perfildog.jpg) no-repeat`,\r\n                  }}\r\n                />\r\n                <ContainerDogDesc>\r\n                  <Input\r\n                    name=\"name3\"\r\n                    label=\"Nome\"\r\n                    borderColor=\"#fff\"\r\n                    iconColor=\"#fff\"\r\n                    icon={AiOutlineUser}\r\n                  />\r\n                  <Input\r\n                    name=\"breed\"\r\n                    label=\"Raça\"\r\n                    borderColor=\"#fff\"\r\n                    iconColor=\"#fff\"\r\n                  />\r\n                  <Input\r\n                    name=\"weigth\"\r\n                    label=\"Peso\"\r\n                    borderColor=\"#fff\"\r\n                    iconColor=\"#fff\"\r\n                  />\r\n                  <Input\r\n                    name=\"age\"\r\n                    label=\"Idade\"\r\n                    borderColor=\"#fff\"\r\n                    iconColor=\"#fff\"\r\n                  />\r\n                  <InputText\r\n                    name=\"pets[2].caracter\"\r\n                    label=\"Características\"\r\n                    borderColor=\"#fff\"\r\n                  />\r\n                </ContainerDogDesc>\r\n              </ContainerDog>\r\n            </Grid>\r\n\r\n            <Grid item lg={3} md={3} sm={6} xs={12}>\r\n              <ContainerDog>\r\n                <ContainerInfoDesc>\r\n                  <InfoItem>\r\n                    Banho e Cuidado\r\n                    <h1>12</h1>\r\n                  </InfoItem>\r\n                  <InfoItem>\r\n                    Banho e Cuidado\r\n                    <h1>12</h1>\r\n                  </InfoItem>\r\n                  <InfoItem>\r\n                    Banho e Cuidado\r\n                    <h1>12</h1>\r\n                  </InfoItem>\r\n                  <InfoItem>\r\n                    Banho e Cuidado\r\n                    <h1>12</h1>\r\n                  </InfoItem>\r\n\r\n                  <Link\r\n                    style={{ width: '100%', position: 'relative', left: '6%' }}\r\n                    to=\"/payment_plan\"\r\n                  >\r\n                    <Button\r\n                      background=\"primary\"\r\n                      style={{\r\n                        marginTop: 30,\r\n                        width: '100%',\r\n                        backgroundColor: '#ffcc29',\r\n                        color: '#000',\r\n                      }}\r\n                    >\r\n                      Seguinte\r\n                      <IoMdArrowRoundForward\r\n                        style={{\r\n                          position: 'relative',\r\n                          top: '3px',\r\n                          left: '10px',\r\n                        }}\r\n                      />\r\n                    </Button>\r\n                  </Link>\r\n                </ContainerInfoDesc>\r\n              </ContainerDog>\r\n            </Grid>\r\n          </Grid>\r\n        </Content>\r\n      </Container>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default MyPets;\r\n","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\Payment\\index.tsx",["463","464","465","466","467","468","469","470","471","472"],"import React, { useEffect, useState } from 'react';\r\n// import {\r\n//   withStyles,\r\n//   Theme,\r\n//   createStyles,\r\n//   makeStyles,\r\n// } from '@material-ui/core/styles';\r\nimport { Grid, IconButton } from '@material-ui/core';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { IoPersonCircle } from 'react-icons/io5';\r\nimport { AiOutlineUser, AiOutlineMail } from 'react-icons/ai';\r\nimport { RiShoppingBag3Fill } from 'react-icons/ri';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../../../components/Button';\r\nimport {\r\n  Container,\r\n  GridHeaderSearch,\r\n  Content,\r\n  Background,\r\n  LogoNav,\r\n} from './styles';\r\nimport Input from '../../../components/InputLabelPure';\r\n\r\nconst PaymentPlan: React.FC = () => {\r\n  const methods = useForm({\r\n    shouldUnregister: false,\r\n  });\r\n\r\n  const onSubmit = data => console.log(data);\r\n\r\n  // const classes = useStyles();\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <Container\r\n        item\r\n        sm={12}\r\n        style={{ width: '100%', display: 'flex', height: '100vh' }}\r\n      >\r\n        <Content>\r\n          <GridHeaderSearch container>\r\n            <LogoNav />\r\n\r\n            <IoPersonCircle\r\n              color=\"#fff\"\r\n              fontSize=\"40px\"\r\n              style={{ position: 'absolute', right: '10px', top: '10px' }}\r\n            />\r\n          </GridHeaderSearch>\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              position: 'relative',\r\n              justifyContent: 'space-evenly',\r\n              top: '100px',\r\n            }}\r\n          >\r\n            <Background className=\"background-payment\" />\r\n          </Grid>\r\n        </Content>\r\n      </Container>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default PaymentPlan;\r\n","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\FormsPages\\FormBill\\index.tsx",["473"],"import {\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n  withStyles,\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nimport React from 'react';\r\n\r\nimport { FormProvider, useFieldArray, useForm } from 'react-hook-form';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Button from '../../../components/Button';\r\nimport Input from '../../../components/InputLabelPure';\r\nimport MenuPrincipalLeft from '../../../components/MenuPrincipalLeft';\r\n\r\nimport Select from '../../../components/Select';\r\nimport { Container, Content, GridHeaderSearch, Form } from './styles';\r\nimport Navbar from '../../../components/MenuMobile/Navbar';\r\nimport InputDate from '../../../components/InputDate';\r\nimport BillsPay from '../../../services/BillsPay';\r\nimport InputMoney from '../../../components/InputMoney';\r\nimport FinancialPayItem from '../../../services/FinancialPayItem';\r\n\r\ninterface RouteParams {\r\n  id: string;\r\n}\r\n\r\nconst FormAnimalBreed: React.FC = () => {\r\n  const StyledTableCell = withStyles(() =>\r\n    createStyles({\r\n      head: {\r\n        // backgroundColor: '#bfbfbf',\r\n        color: '#000',\r\n        fontWeight: 600,\r\n      },\r\n      body: {\r\n        fontSize: 14,\r\n      },\r\n    }),\r\n  )(TableCell);\r\n\r\n  const StyledTableRow = withStyles(\r\n    (theme: import('@material-ui/core').Theme) =>\r\n      createStyles({\r\n        root: {\r\n          '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n          },\r\n        },\r\n      }),\r\n  )(TableRow);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      height: '100%',\r\n    },\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paperModal: {\r\n      backgroundColor: '#FFF',\r\n      // border: '2px solid #000',\r\n      padding: '20px',\r\n    },\r\n    paper: {\r\n      marginTop: 20,\r\n      '&.MuiPaper-elevation5': {\r\n        boxShadow:\r\n          '-5px -5px 5px 4px rgba(0,0,0,0.05), 3px 5px 8px 0px rgba(0,0,0,0.14), 0px 1px 14px 0px rgba(0,0,0,0.12)',\r\n      },\r\n    },\r\n  });\r\n\r\n  const { id } = useParams<RouteParams>();\r\n\r\n  const methods = useForm({\r\n    shouldUnregister: false,\r\n  });\r\n\r\n  const { fields } = useFieldArray({\r\n    control: methods.control,\r\n    name: 'status',\r\n  });\r\n\r\n  const onSubmit = data => {\r\n    console.log(id);\r\n    if (data.status.length !== 0) {\r\n      console.log(data);\r\n      FinancialPayItem.put(data.status)\r\n        .then(response => {\r\n          console.log(response);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      Object.keys(data).forEach(key => {\r\n        if (typeof data[key] === 'object' && data[key] !== null) {\r\n          // eslint-disable-next-line no-param-reassign\r\n          data[key] = data[key].value;\r\n        }\r\n      });\r\n      console.log(data);\r\n      BillsPay.create(data)\r\n        .then(response => {\r\n          console.log(response);\r\n          if (response.status === 201) {\r\n            console.log(response.data.response[0]);\r\n            methods.setValue(\r\n              'status',\r\n              response.data.response[0].financial_pay_itens,\r\n            );\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  // const listAnimalBreed = useCallback(() => {\r\n  // methods.setValue({ amount: 'asasas' });\r\n  // methods.setValue();\r\n  // setTimeout(() => {\r\n  //   methods.reset({ amount: '100.15', description: 'aaaa' });\r\n  // }, 2000);\r\n  // BillsPay.getAll()\r\n  //   .then(result => {\r\n  //     setValue('status', result.response[40].financial_pay_itens);\r\n  //   })\r\n  //   .catch(e => {\r\n  //     console.log(e);\r\n  //   });\r\n  // }, [methods]);\r\n\r\n  // useEffect(() => {\r\n  //   listAnimalBreed();\r\n  // }, []);\r\n\r\n  const repetitionType = [\r\n    { value: '15', label: '15 Dias' },\r\n    { value: '21', label: '21 Dias' },\r\n    { value: '30', label: '30 Dias' },\r\n    { value: '45', label: '45 Dias' },\r\n    { value: '60', label: '60 Dias' },\r\n  ];\r\n  const classes = useStyles();\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <Container container>\r\n        <MenuPrincipalLeft pages={['all']} />\r\n\r\n        <Content>\r\n          <GridHeaderSearch\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Link to=\"/\">\r\n              <FiArrowLeft />\r\n              Voltar\r\n            </Link>\r\n\r\n            <Navbar name=\"Contas a Pagar\" />\r\n\r\n            <Grid\r\n              className=\"title-header\"\r\n              container\r\n              item\r\n              sm={12}\r\n              alignItems=\"center\"\r\n              justify=\"center\"\r\n              direction=\"column\"\r\n            >\r\n              <p style={{ fontWeight: 500, color: '#9d9d9c' }}>\r\n                Contas a Pagar\r\n              </p>\r\n              <hr\r\n                style={{\r\n                  border: 0,\r\n                  borderBottom: '2px solid #17a0ae',\r\n                  width: 100,\r\n                  marginTop: 5,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </GridHeaderSearch>\r\n\r\n          <Form\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={methods.handleSubmit(onSubmit)}\r\n          >\r\n            <Grid container>\r\n              <Grid item xs={12} sm={12} md={12}>\r\n                <Input name=\"description\" label=\"Descrição\" />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <InputDate\r\n                  name=\"date_init\"\r\n                  label=\"Data da Compra\"\r\n                  dateInitial=\"2021-08-29\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <InputMoney\r\n                  name=\"amount\"\r\n                  label=\"Valor Total\"\r\n                  // defaultValue=\"100.10\"\r\n                />\r\n              </Grid>\r\n              {/* <Grid item xs={12} sm={12} md={6}>\r\n                <Input name=\"repetition\" label=\"Quantidade Pagamentos\" />\r\n              </Grid> */}\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <Select\r\n                  name=\"repetition_type\"\r\n                  placeholder=\"Intervalo do Pagamento\"\r\n                  options={repetitionType}\r\n                  required\r\n                />\r\n                {methods.errors.kind_people && (\r\n                  <p className=\"required-form\">\r\n                    <span>* </span>\r\n                    Este campo é obrigatório.\r\n                  </p>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              background=\"primary\"\r\n              style={{ marginTop: 15, width: '98.5%' }}\r\n            >\r\n              Enviar\r\n            </Button>\r\n          </Form>\r\n\r\n          <Paper\r\n            elevation={2}\r\n            style={{ width: '100%' }}\r\n            className={classes.paper}\r\n          >\r\n            <TableContainer style={{ flex: 1 }}>\r\n              <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                  <TableRow hover>\r\n                    <StyledTableCell width=\"5%\">Qnt</StyledTableCell>\r\n                    <StyledTableCell width=\"30%\">Data</StyledTableCell>\r\n                    <StyledTableCell width=\"45%\">Descricao</StyledTableCell>\r\n                    <StyledTableCell width=\"20%\">Valor</StyledTableCell>\r\n                    <StyledTableCell width=\"10%\" align=\"center\">\r\n                      Ações\r\n                    </StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {fields.map((row, index) => {\r\n                    return (\r\n                      <StyledTableRow key={row.pay_id}>\r\n                        <StyledTableCell component=\"th\" scope=\"row\">\r\n                          {index + 1}\r\n                        </StyledTableCell>\r\n                        <StyledTableCell component=\"th\" scope=\"row\">\r\n                          <InputDate\r\n                            name={`status[${index}].expected_date`}\r\n                            dateInitial={row.expected_date}\r\n                          />\r\n                        </StyledTableCell>\r\n                        <StyledTableCell component=\"th\" scope=\"row\">\r\n                          {methods.getValues('description')}\r\n                        </StyledTableCell>\r\n                        <StyledTableCell component=\"th\" scope=\"row\">\r\n                          <InputMoney\r\n                            name={`status[${index}].repetition`}\r\n                            defaultValue={parseFloat(\r\n                              row.expected_amount,\r\n                            ).toFixed(2)}\r\n                          />\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"center\">\r\n                          ver, editar, apagar\r\n                        </StyledTableCell>\r\n                      </StyledTableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n          <Button\r\n            type=\"submit\"\r\n            background=\"primary\"\r\n            style={{ marginLeft: 5, marginTop: 15, width: '97.5%' }}\r\n          >\r\n            Finalizar\r\n          </Button>\r\n        </Content>\r\n      </Container>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default FormAnimalBreed;\r\n","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\PetProcedures\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\People\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\People\\FormUsers\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\PetProcedures\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\FormsPages\\FormBill\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\Payment\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\PeopleApi.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\FinancialPayItem.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\PetProceduresApi.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\BillsPay.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\MenuMobile\\Navbar.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\MyPets\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\HealthPlansApi.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\FirstAccess\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\Login\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\http-common.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\Button\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\InputLabelPure\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\Loading\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\MenuPrincipalLeft\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\Select\\index.tsx",["474","475","476"],"import { TextField } from '@material-ui/core';\r\nimport { Controller, useFormContext } from 'react-hook-form';\r\nimport React, {\r\n  InputHTMLAttributes,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport { IconBaseProps } from 'react-icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Container } from './styles';\r\n\r\ninterface SelectProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string;\r\n  icon?: React.ComponentType<IconBaseProps>;\r\n  id?: string;\r\n  placeholder?: string;\r\n  iconColor?: string;\r\n  options: Array<{ value: string; label: string }>;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  name,\r\n  // icon: Icon,\r\n  // iconColor,\r\n  placeholder,\r\n  options,\r\n  required,\r\n}) => {\r\n  const { control } = useFormContext();\r\n  const useStyles = makeStyles({\r\n    inputRoot: {\r\n      fontSize: 16,\r\n    },\r\n    labelRoot: {\r\n      fontSize: 16,\r\n      color: '#9d9d9c',\r\n      '&$labelFocused': {\r\n        color: '#9d9d9c',\r\n      },\r\n      '&.MuiInputLabel-outlined.MuiInputLabel-shrink': {\r\n        color: '#9d9d9c',\r\n        fontWeight: 500,\r\n        transform: 'translate(15px, -6px) scale(.8)',\r\n      },\r\n    },\r\n    labelFocused: {},\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const getOpObj = option => {\r\n    if (!option) return option;\r\n    if (!option.value) {\r\n      const opt = options.find(op => op.value.toString() === option.toString());\r\n      return opt;\r\n    }\r\n    return option;\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      render={({ onChange, ...props }) => (\r\n        <Container\r\n          isfilled={!!props.value}\r\n          options={options}\r\n          getOptionLabel={(option: any) => getOpObj(option)?.label}\r\n          getOptionSelected={(option: any) => getOpObj(option)?.value}\r\n          onChange={(e, data: any) => onChange(getOpObj(data)?.value)}\r\n          renderInput={params => (\r\n            <TextField\r\n              name={name}\r\n              {...params}\r\n              autoComplete=\"new-password\"\r\n              label={placeholder}\r\n              variant=\"outlined\"\r\n              inputProps={{\r\n                ...params.inputProps,\r\n                autoComplete: 'new-password',\r\n                form: {\r\n                  autoComplete: 'new-password',\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                classes: {\r\n                  root: classes.labelRoot,\r\n                  focused: classes.labelFocused,\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n          {...props}\r\n        />\r\n      )}\r\n      name={name}\r\n      control={control}\r\n      rules={{ required }}\r\n      defaultValue={null}\r\n    />\r\n  );\r\n};\r\nexport default Select;\r\n","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\ButtonUtil\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\InputMoney\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\InputDate\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\InputText\\index.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\MenuMobile\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\Logup\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\perfil\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\OwnerPetsApi.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\AccreditationsApi.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Accreditations\\FormAccreditations\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\site\\perfilCustomer\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\PlansBenfitsApi.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Accreditations\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Financial\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\ModalitiesApi.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\PetProcedures\\FormPetProcedures\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\MenuMobile\\SubMenu.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\MenuPrincipalLeft\\MenuData.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\BillsCategoryApi.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\BillsCategory\\FormBillsCategory\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\HealthPlans\\FormHealthPlans\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\BenefitsApi.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Benefits\\FormBenefits\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Modalities\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\HealthPlans\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Benefits\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\BillsCategory\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\Modalities\\FormModalities\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\AnimalTypeApi.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\services\\AnimalBreedApi.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\AnimalBreed\\FormAnimalBreed\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\AnimalType\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\AnimalBreed\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\AnimalType\\FormAnimalType\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\InputText\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\InputLabelPure\\styles.ts",["477"],"import { IconButton } from '@material-ui/core';\r\nimport { TextFieldProps } from '@rmwc/textfield';\r\nimport styled, { css } from 'styled-components';\r\nimport { shade } from 'polished';\r\n\r\ntype inputProps = TextFieldProps & {\r\n  isFocused?: boolean;\r\n  isFilled?: boolean;\r\n  isIcon?: boolean;\r\n  colorPlaceholder?: string;\r\n  backgroundColor?: string;\r\n  label?: boolean;\r\n  borderColor?: string;\r\n  // isLoading?: Boolean;\r\n};\r\n\r\nexport const Container = styled.div<inputProps>`\r\n  position: relative;\r\n  border-radius: 10px;\r\n  /* border: 2px solid #bfbfbf; */\r\n  margin: 5px;\r\n  color: #bfbfbf;\r\n\r\n  ${props =>\r\n    props.borderColor &&\r\n    css`\r\n      color: ${props.borderColor};\r\n    `}\r\n  display: flex;\r\n  height: 46px;\r\n  & fieldset {\r\n    font-size: 16px;\r\n    border: 2px solid #bfbfbf;\r\n    ${props =>\r\n      props.borderColor &&\r\n      css`\r\n        border: 2px solid ${props.borderColor};\r\n      `}\r\n    border-radius: 10px;\r\n    padding: 0;\r\n    height: 46px;\r\n    width: 100%;\r\n    display: flex;\r\n    &:hover {\r\n      border-color: #17a0ae;\r\n      border-width: 3px;\r\n      ${props =>\r\n        props.borderColor &&\r\n        css`\r\n          border: 3px solid ${props.borderColor};\r\n        `}\r\n      & > .MuiButtonBase-root {\r\n        left: 1px;\r\n        top: -1px;\r\n      }\r\n    }\r\n    & legend {\r\n      border: 0;\r\n      width: auto;\r\n      height: 0px;\r\n      display: block;\r\n      padding: 0;\r\n      /* font-size: 0.75em; */\r\n      width: 0px;\r\n      text-align: left;\r\n      transition: max-width 50ms cubic-bezier(0, 0, 0.2, 1) 0ms;\r\n      visibility: hidden;\r\n      transition: width 5s;\r\n      margin: 0 10px;\r\n      & span {\r\n        font-size: 13px;\r\n      }\r\n    }\r\n  }\r\n  ${props =>\r\n    props.backgroundColor &&\r\n    css`\r\n      background-color: ${props.backgroundColor};\r\n    `}\r\n  & input {\r\n    color: #9d9d9c;\r\n    ${props =>\r\n      props.borderColor &&\r\n      css`\r\n        color: ${props.borderColor};\r\n      `}\r\n    background: transparent;\r\n    width: 100%;\r\n    border: 0;\r\n    border-radius: 5px;\r\n    outline: none;\r\n    /* min-width: 250px; */\r\n    padding: ${props => (props.isIcon ? `0` : `0 10px`)};\r\n    font-size: 16px;\r\n    transition: all 0.1s linear;\r\n    -webkit-transition: all 0.1s linear;\r\n    -moz-transition: all 0.1s linear;\r\n    -webkit-appearance: none;\r\n    &:-webkit-autofill,\r\n    &:-webkit-autofill:hover,\r\n    &:-webkit-autofill:focus,\r\n    &:-webkit-autofill:active {\r\n      -webkit-transition: 'color 9999s ease-out, background-color 9999s ease-out';\r\n      -webkit-transition-delay: 9999s;\r\n    }\r\n    ${props =>\r\n      props.colorPlaceholder &&\r\n      css`\r\n        &::placeholder {\r\n          color: ${props.colorPlaceholder};\r\n        }\r\n      `}\r\n  }\r\n\r\n  & label {\r\n    pointer-events: none;\r\n    position: absolute;\r\n    top: calc(50% - 9px);\r\n    left: ${props => (props.isIcon ? `40px` : `10px`)};\r\n    transform-origin: left;\r\n    transition: all 0.2s linear;\r\n    -webkit-transition: all 0.2s linear;\r\n    -moz-transition: all 0.2s linear;\r\n    background-color: transparent;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    max-width: 90%;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n  svg {\r\n    font-size: 20px;\r\n    margin: 5px;\r\n  }\r\n\r\n  /* & input:focus + label,\r\n  & input:not(:placeholder-shown) + & label {\r\n    font-size: 13px;\r\n    top: -8px;\r\n    color: #9d9d9c;\r\n  } */\r\n\r\n  ${props =>\r\n    props.isFocused &&\r\n    css`\r\n      & label {\r\n        overflow: unset;\r\n        text-overflow: unset;\r\n        color: #9d9d9c;\r\n        ${props.borderColor &&\r\n        css`\r\n          color: ${props.borderColor};\r\n        `}\r\n        top: -8px;\r\n        left: 15px;\r\n        transform: scale(0.8);\r\n      }\r\n      & svg {\r\n        color: #17a0ae !important;\r\n        ${props.borderColor &&\r\n        css`\r\n          color: ${props.borderColor} !important;\r\n        `}\r\n      }\r\n      & fieldset {\r\n        border-color: #17a0ae;\r\n        ${props.borderColor &&\r\n        css`\r\n          border-color: ${props.borderColor};\r\n        `}\r\n        & legend {\r\n          ${props.label &&\r\n          css`\r\n            padding: 0 7px;\r\n          `}\r\n          width: auto;\r\n        }\r\n      }\r\n    `}\r\n\r\n  ${props =>\r\n    props.isFilled &&\r\n    css`\r\n      & label {\r\n        overflow: unset;\r\n        text-overflow: unset;\r\n        color: #9d9d9c;\r\n        ${props.borderColor &&\r\n        css`\r\n          color: ${props.borderColor};\r\n        `}\r\n        top: -8px;\r\n        left: 15px;\r\n        transform: scale(0.8);\r\n      }\r\n      & svg {\r\n        color: #17a0ae !important;\r\n        ${props.borderColor &&\r\n        css`\r\n          color: ${props.borderColor} !important;\r\n        `}\r\n      }\r\n      & fieldset {\r\n        border-color: #17a0ae;\r\n        ${props.borderColor &&\r\n        css`\r\n          border-color: ${props.borderColor};\r\n        `}\r\n        & legend {\r\n          ${props.label &&\r\n          css`\r\n            padding: 0 7px;\r\n          `}\r\n          width: auto;\r\n        }\r\n      }\r\n    `}\r\n\r\n    @media (max-width: 600px) {\r\n    & input {\r\n      font-size: 13px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ButtonIcon = styled(IconButton)`\r\n  & {\r\n    left: 2px;\r\n    padding: 5px 0 !important;\r\n    width: 42px;\r\n    height: 42px;\r\n  }\r\n`;\r\n","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\InputDate\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\ButtonUtil\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\InputMoney\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\Select\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\MenuPrincipalLeft\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\Button\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\components\\Loading\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\People\\PDF\\Viewer.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\RelatoriesFinancial\\PdfDocument\\PDFViewer.tsx",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\RelatoriesFinancial\\index.tsx",["478","479","480","481","482"],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\People\\PDF\\Document.tsx",["483"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Page,\r\n  Text,\r\n  View,\r\n  Document,\r\n  StyleSheet,\r\n  Image,\r\n} from '@react-pdf/renderer';\r\n\r\nimport formatCurrency from '../../../../utils/formatCurrency';\r\nimport peopleApi, { PropsPeople } from '../../../../services/PeopleApi';\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    backgroundColor: '#ffffff',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingVertical: 30,\r\n    position: 'relative',\r\n  },\r\n  row: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-evenly',\r\n    marginRight: 30,\r\n    marginHorizontal: 30,\r\n    marginBottom: 5,\r\n  },\r\n  collumn: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flex: 1,\r\n  },\r\n  logo: {\r\n    position: 'absolute',\r\n    left: 30,\r\n  },\r\n  logoImage: {\r\n    height: 50,\r\n    width: 80,\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 10,\r\n    marginBottom: 40,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 600,\r\n  },\r\n  subTitle: {\r\n    fontSize: 14,\r\n    fontWeight: 700,\r\n    marginBottom: 10,\r\n  },\r\n  description: {\r\n    fontSize: 12,\r\n    marginBottom: 5,\r\n  },\r\n  descriptionNegative: {\r\n    color: 'red',\r\n    fontSize: 12,\r\n    marginBottom: 5,\r\n  },\r\n});\r\n\r\nconst logo =\r\n  'https://winmagictoys.com/wp-content/uploads/2018/09/dummy-logo.png';\r\n\r\nconst PdfDocument = (): JSX.Element => {\r\n  const [listUsers, setListUsers] = useState<PropsPeople[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    peopleApi\r\n      .getAll()\r\n      .then(result => {\r\n        console.log(result);\r\n        setListUsers(result.data.response);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <div />;\r\n  }\r\n\r\n  return (\r\n    <Document>\r\n      <Page style={styles.page}>\r\n        <View style={styles.logo}>\r\n          <Image style={styles.logoImage} source={logo} />\r\n        </View>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>Relatório de usuários</Text>\r\n        </View>\r\n        <View style={styles.row}>\r\n          <View style={styles.collumn}>\r\n            <Text style={styles.subTitle}>Nome</Text>\r\n          </View>\r\n          <View style={styles.collumn}>\r\n            <Text style={styles.subTitle}>CPF</Text>\r\n          </View>\r\n          <View style={styles.collumn}>\r\n            <Text style={styles.subTitle}>Plano</Text>\r\n          </View>\r\n          <View style={styles.collumn}>\r\n            <Text style={styles.subTitle}>Contato</Text>\r\n          </View>\r\n          <View style={styles.collumn}>\r\n            <Text style={styles.subTitle}>Situação</Text>\r\n          </View>\r\n        </View>\r\n\r\n        {listUsers.map(data => {\r\n          return (\r\n            <View style={styles.row} key={data.people_id}>\r\n              <View style={styles.collumn}>\r\n                <Text style={styles.description}>{data.name}</Text>\r\n              </View>\r\n              <View style={styles.collumn}>\r\n                <Text style={styles.description}>128.235.756-50</Text>\r\n              </View>\r\n              <View style={styles.collumn}>\r\n                <Text style={styles.description}>Master Premium</Text>\r\n              </View>\r\n              <View style={styles.collumn}>\r\n                <Text style={styles.description}>(34) 99120-1229</Text>\r\n              </View>\r\n              <View style={styles.collumn}>\r\n                <Text style={styles.description}>Ativado</Text>\r\n              </View>\r\n            </View>\r\n          );\r\n        })}\r\n        {listUsers.map(data => {\r\n          return (\r\n            <View style={styles.row} key={data.people_id}>\r\n              <View style={styles.collumn}>\r\n                <Text style={styles.description}>{data.name}</Text>\r\n              </View>\r\n              <View style={styles.collumn}>\r\n                <Text style={styles.description}>128.235.756-50</Text>\r\n              </View>\r\n              <View style={styles.collumn}>\r\n                <Text style={styles.description}>Master Premium</Text>\r\n              </View>\r\n              <View style={styles.collumn}>\r\n                <Text style={styles.description}>(34) 99120-1229</Text>\r\n              </View>\r\n              <View style={styles.collumn}>\r\n                <Text style={styles.description}>Ativado</Text>\r\n              </View>\r\n            </View>\r\n          );\r\n        })}\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nexport default PdfDocument;\r\n","C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\RelatoriesFinancial\\styles.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\utils\\formatCurrency.ts",[],"C:\\Users\\felip\\Desktop\\mastervet-frontend-web\\src\\pages\\ListPages\\RelatoriesFinancial\\PdfDocument\\index.tsx",["484"],{"ruleId":"485","replacedBy":"486"},{"ruleId":"487","replacedBy":"488"},{"ruleId":"489","replacedBy":"490"},{"ruleId":"491","replacedBy":"492"},{"ruleId":"493","replacedBy":"494"},{"ruleId":"495","severity":1,"message":"496","line":95,"column":7,"nodeType":"497","messageId":"498","endLine":95,"endColumn":14},{"ruleId":"495","severity":1,"message":"499","line":13,"column":3,"nodeType":"497","messageId":"498","endLine":13,"endColumn":8},{"ruleId":"495","severity":1,"message":"500","line":3,"column":8,"nodeType":"497","messageId":"498","endLine":3,"endColumn":10},{"ruleId":"495","severity":1,"message":"501","line":11,"column":10,"nodeType":"497","messageId":"498","endLine":11,"endColumn":16},{"ruleId":"495","severity":1,"message":"502","line":25,"column":8,"nodeType":"497","messageId":"498","endLine":25,"endColumn":22},{"ruleId":"495","severity":1,"message":"503","line":26,"column":8,"nodeType":"497","messageId":"498","endLine":26,"endColumn":17},{"ruleId":"495","severity":1,"message":"504","line":50,"column":21,"nodeType":"497","messageId":"498","endLine":50,"endColumn":33},{"ruleId":"495","severity":1,"message":"505","line":51,"column":25,"nodeType":"497","messageId":"498","endLine":51,"endColumn":41},{"ruleId":"495","severity":1,"message":"506","line":52,"column":20,"nodeType":"497","messageId":"498","endLine":52,"endColumn":31},{"ruleId":"507","severity":1,"message":"508","line":81,"column":6,"nodeType":"509","endLine":81,"endColumn":8,"suggestions":"510"},{"ruleId":"495","severity":1,"message":"511","line":8,"column":16,"nodeType":"497","messageId":"498","endLine":8,"endColumn":26},{"ruleId":"507","severity":1,"message":"512","line":88,"column":6,"nodeType":"509","endLine":88,"endColumn":8,"suggestions":"513"},{"ruleId":"495","severity":1,"message":"514","line":98,"column":9,"nodeType":"497","messageId":"498","endLine":98,"endColumn":14},{"ruleId":"495","severity":1,"message":"511","line":8,"column":16,"nodeType":"497","messageId":"498","endLine":8,"endColumn":26},{"ruleId":"495","severity":1,"message":"515","line":11,"column":25,"nodeType":"497","messageId":"498","endLine":11,"endColumn":38},{"ruleId":"495","severity":1,"message":"516","line":36,"column":10,"nodeType":"497","messageId":"498","endLine":36,"endColumn":27},{"ruleId":"495","severity":1,"message":"517","line":48,"column":9,"nodeType":"497","messageId":"498","endLine":48,"endColumn":17},{"ruleId":"495","severity":1,"message":"518","line":50,"column":9,"nodeType":"497","messageId":"498","endLine":50,"endColumn":24},{"ruleId":"495","severity":1,"message":"511","line":8,"column":16,"nodeType":"497","messageId":"498","endLine":8,"endColumn":26},{"ruleId":"495","severity":1,"message":"515","line":11,"column":25,"nodeType":"497","messageId":"498","endLine":11,"endColumn":38},{"ruleId":"495","severity":1,"message":"516","line":37,"column":10,"nodeType":"497","messageId":"498","endLine":37,"endColumn":27},{"ruleId":"495","severity":1,"message":"517","line":49,"column":9,"nodeType":"497","messageId":"498","endLine":49,"endColumn":17},{"ruleId":"495","severity":1,"message":"518","line":51,"column":9,"nodeType":"497","messageId":"498","endLine":51,"endColumn":24},{"ruleId":"495","severity":1,"message":"519","line":1,"column":17,"nodeType":"497","messageId":"498","endLine":1,"endColumn":26},{"ruleId":"495","severity":1,"message":"520","line":1,"column":28,"nodeType":"497","messageId":"498","endLine":1,"endColumn":36},{"ruleId":"495","severity":1,"message":"511","line":8,"column":16,"nodeType":"497","messageId":"498","endLine":8,"endColumn":26},{"ruleId":"495","severity":1,"message":"515","line":12,"column":25,"nodeType":"497","messageId":"498","endLine":12,"endColumn":38},{"ruleId":"495","severity":1,"message":"521","line":13,"column":10,"nodeType":"497","messageId":"498","endLine":13,"endColumn":21},{"ruleId":"495","severity":1,"message":"522","line":21,"column":3,"nodeType":"497","messageId":"498","endLine":21,"endColumn":7},{"ruleId":"495","severity":1,"message":"517","line":36,"column":9,"nodeType":"497","messageId":"498","endLine":36,"endColumn":17},{"ruleId":"495","severity":1,"message":"519","line":1,"column":17,"nodeType":"497","messageId":"498","endLine":1,"endColumn":26},{"ruleId":"495","severity":1,"message":"520","line":1,"column":28,"nodeType":"497","messageId":"498","endLine":1,"endColumn":36},{"ruleId":"495","severity":1,"message":"511","line":8,"column":16,"nodeType":"497","messageId":"498","endLine":8,"endColumn":26},{"ruleId":"495","severity":1,"message":"523","line":11,"column":10,"nodeType":"497","messageId":"498","endLine":11,"endColumn":23},{"ruleId":"495","severity":1,"message":"515","line":11,"column":25,"nodeType":"497","messageId":"498","endLine":11,"endColumn":38},{"ruleId":"495","severity":1,"message":"524","line":12,"column":10,"nodeType":"497","messageId":"498","endLine":12,"endColumn":28},{"ruleId":"495","severity":1,"message":"525","line":14,"column":10,"nodeType":"497","messageId":"498","endLine":14,"endColumn":14},{"ruleId":"495","severity":1,"message":"526","line":15,"column":8,"nodeType":"497","messageId":"498","endLine":15,"endColumn":14},{"ruleId":"495","severity":1,"message":"527","line":23,"column":8,"nodeType":"497","messageId":"498","endLine":23,"endColumn":13},{"ruleId":"495","severity":1,"message":"517","line":30,"column":9,"nodeType":"497","messageId":"498","endLine":30,"endColumn":17},{"ruleId":"495","severity":1,"message":"499","line":14,"column":3,"nodeType":"497","messageId":"498","endLine":14,"endColumn":8},{"ruleId":"495","severity":1,"message":"528","line":5,"column":3,"nodeType":"497","messageId":"498","endLine":5,"endColumn":14},{"ruleId":"495","severity":1,"message":"519","line":6,"column":3,"nodeType":"497","messageId":"498","endLine":6,"endColumn":12},{"ruleId":"495","severity":1,"message":"520","line":7,"column":3,"nodeType":"497","messageId":"498","endLine":7,"endColumn":11},{"ruleId":"495","severity":1,"message":"529","line":4,"column":10,"nodeType":"497","messageId":"498","endLine":4,"endColumn":15},{"ruleId":"495","severity":1,"message":"530","line":18,"column":23,"nodeType":"497","messageId":"498","endLine":18,"endColumn":32},{"ruleId":"495","severity":1,"message":"531","line":19,"column":10,"nodeType":"497","messageId":"498","endLine":19,"endColumn":25},{"ruleId":"495","severity":1,"message":"532","line":28,"column":8,"nodeType":"497","messageId":"498","endLine":28,"endColumn":19},{"ruleId":"495","severity":1,"message":"533","line":35,"column":9,"nodeType":"497","messageId":"498","endLine":35,"endColumn":16},{"ruleId":"495","severity":1,"message":"504","line":36,"column":21,"nodeType":"497","messageId":"498","endLine":36,"endColumn":33},{"ruleId":"495","severity":1,"message":"534","line":11,"column":8,"nodeType":"497","messageId":"498","endLine":11,"endColumn":22},{"ruleId":"495","severity":1,"message":"535","line":11,"column":10,"nodeType":"497","messageId":"498","endLine":11,"endColumn":21},"lines-around-directive",["536"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'current' is assigned a value but never used.","Identifier","unusedVar","'Theme' is defined but never used.","'id' is defined but never used.","'border' is defined but never used.","'HealthPlansApi' is defined but never used.","'SellerApi' is defined but never used.","'setIsLoading' is assigned a value but never used.","'setIsHealthPlans' is assigned a value but never used.","'setIsSeller' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["537"],"'IconButton' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'methods'. Either include them or remove the dependency array.",["538"],"'plans' is assigned a value but never used.","'AiOutlineMail' is defined but never used.","'islistHealthPlans' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'listHealthPlans' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'RiLock2Line' is defined but never used.","'Pets' is defined but never used.","'AiOutlineUser' is defined but never used.","'RiShoppingBag3Fill' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'Input' is defined but never used.","'useCallback' is defined but never used.","'shade' is defined but never used.","'FiPrinter' is defined but never used.","'PDFDownloadLink' is defined but never used.","'PdfDocument' is defined but never used.","'history' is assigned a value but never used.","'formatCurrency' is defined but never used.","'borderStyle' is defined but never used.","padding-line-between-statements",{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},"Update the dependencies array to be: [id]",{"range":"543","text":"544"},"Update the dependencies array to be: [id, methods]",{"range":"545","text":"546"},[2563,2565],"[id]",[2290,2292],"[id, methods]"]